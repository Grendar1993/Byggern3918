
NODE2atmega.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014c  00800200  00000d70  00000e04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  0080034c  0080034c  00000f50  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000fec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cb8  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000128f  00000000  00000000  00002e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c80  00000000  00000000  000040a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000384  00000000  00000000  00004d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c5  00000000  00000000  000050a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000095c  00000000  00000000  0000586d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000061c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	f0 c0       	rjmp	.+480    	; 0x1ee <__vector_3>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e7       	ldi	r30, 0x70	; 112
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 34       	cpi	r26, 0x4C	; 76
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ac e4       	ldi	r26, 0x4C	; 76
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a1 36       	cpi	r26, 0x61	; 97
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	ac d0       	rcall	.+344    	; 0x278 <main>
 120:	25 c6       	rjmp	.+3146   	; 0xd6c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <ADC_init>:
#include "adc.h"

void ADC_init( void )
{
	// Enable ADC and set prescaler to 128
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
 124:	ea e7       	ldi	r30, 0x7A	; 122
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	87 68       	ori	r24, 0x87	; 135
 12c:	80 83       	st	Z, r24
 12e:	08 95       	ret

00000130 <ADC_read>:
}

uint8_t ADC_read( void )
{
	// Reference selection: AVCC w/ external capacitor at AREF. Left adjust result
	ADMUX |= (1 << REFS0) | (1 << ADLAR);
 130:	ec e7       	ldi	r30, 0x7C	; 124
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	80 66       	ori	r24, 0x60	; 96
 138:	80 83       	st	Z, r24
	
	// Start conversion
	ADCSRA |= (1 << ADSC);
 13a:	ea e7       	ldi	r30, 0x7A	; 122
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	80 64       	ori	r24, 0x40	; 64
 142:	80 83       	st	Z, r24
	
	// Wait until conversion is complete
	while(ADCSRA & (1 << ADSC));
 144:	80 81       	ld	r24, Z
 146:	86 fd       	sbrc	r24, 6
 148:	fd cf       	rjmp	.-6      	; 0x144 <ADC_read+0x14>
	
	// Read converted data
	return ADCH;
 14a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
 14e:	08 95       	ret

00000150 <CAN_init>:
		//Message not received
		//message.id = -1;
	//}
	
	return message;
}
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	0d d1       	rcall	.+538    	; 0x370 <MCP_init>
 156:	48 e6       	ldi	r20, 0x68	; 104
 158:	60 e6       	ldi	r22, 0x60	; 96
 15a:	80 e6       	ldi	r24, 0x60	; 96
 15c:	22 d1       	rcall	.+580    	; 0x3a2 <MCP_bit_modify>
 15e:	41 e0       	ldi	r20, 0x01	; 1
 160:	63 e0       	ldi	r22, 0x03	; 3
 162:	8b e2       	ldi	r24, 0x2B	; 43
 164:	1e d1       	rcall	.+572    	; 0x3a2 <MCP_bit_modify>
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	60 ee       	ldi	r22, 0xE0	; 224
 16a:	8f e0       	ldi	r24, 0x0F	; 15
 16c:	1a d1       	rcall	.+564    	; 0x3a2 <MCP_bit_modify>
 16e:	8e e0       	ldi	r24, 0x0E	; 14
 170:	ed d0       	rcall	.+474    	; 0x34c <MCP_read>
 172:	1f 92       	push	r1
 174:	8f 93       	push	r24
 176:	c6 e0       	ldi	r28, 0x06	; 6
 178:	d2 e0       	ldi	r29, 0x02	; 2
 17a:	df 93       	push	r29
 17c:	cf 93       	push	r28
 17e:	c4 d1       	rcall	.+904    	; 0x508 <printf>
 180:	8c e2       	ldi	r24, 0x2C	; 44
 182:	e4 d0       	rcall	.+456    	; 0x34c <MCP_read>
 184:	1f 92       	push	r1
 186:	8f 93       	push	r24
 188:	df 93       	push	r29
 18a:	cf 93       	push	r28
 18c:	bd d1       	rcall	.+890    	; 0x508 <printf>
 18e:	8d e2       	ldi	r24, 0x2D	; 45
 190:	dd d0       	rcall	.+442    	; 0x34c <MCP_read>
 192:	1f 92       	push	r1
 194:	8f 93       	push	r24
 196:	8b e1       	ldi	r24, 0x1B	; 27
 198:	92 e0       	ldi	r25, 0x02	; 2
 19a:	9f 93       	push	r25
 19c:	8f 93       	push	r24
 19e:	b4 d1       	rcall	.+872    	; 0x508 <printf>
 1a0:	8e e0       	ldi	r24, 0x0E	; 14
 1a2:	d4 d0       	rcall	.+424    	; 0x34c <MCP_read>
 1a4:	80 7e       	andi	r24, 0xE0	; 224
 1a6:	2d b7       	in	r18, 0x3d	; 61
 1a8:	3e b7       	in	r19, 0x3e	; 62
 1aa:	24 5f       	subi	r18, 0xF4	; 244
 1ac:	3f 4f       	sbci	r19, 0xFF	; 255
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	3e bf       	out	0x3e, r19	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	2d bf       	out	0x3d, r18	; 61
 1b8:	88 23       	and	r24, r24
 1ba:	51 f0       	breq	.+20     	; 0x1d0 <CAN_init+0x80>
 1bc:	83 e3       	ldi	r24, 0x33	; 51
 1be:	92 e0       	ldi	r25, 0x02	; 2
 1c0:	9f 93       	push	r25
 1c2:	8f 93       	push	r24
 1c4:	a1 d1       	rcall	.+834    	; 0x508 <printf>
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <CAN_init+0x84>
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <CAN_int_vect>:
 1da:	40 e0       	ldi	r20, 0x00	; 0
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	8c e2       	ldi	r24, 0x2C	; 44
 1e0:	e0 d0       	rcall	.+448    	; 0x3a2 <MCP_bit_modify>
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <__data_end>
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	08 95       	ret

000001ee <__vector_3>:

//Interrupt service routine for CAN bus
ISR(INT2_vect) {
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	0b b6       	in	r0, 0x3b	; 59
 1fa:	0f 92       	push	r0
 1fc:	2f 93       	push	r18
 1fe:	3f 93       	push	r19
 200:	4f 93       	push	r20
 202:	5f 93       	push	r21
 204:	6f 93       	push	r22
 206:	7f 93       	push	r23
 208:	8f 93       	push	r24
 20a:	9f 93       	push	r25
 20c:	af 93       	push	r26
 20e:	bf 93       	push	r27
 210:	ef 93       	push	r30
 212:	ff 93       	push	r31
//	_delay_ms(10);
	CAN_int_vect();
 214:	e2 df       	rcall	.-60     	; 0x1da <CAN_int_vect>
   printf("INTERRUPT\r\n");
 216:	8d e7       	ldi	r24, 0x7D	; 125
 218:	92 e0       	ldi	r25, 0x02	; 2
 21a:	89 d1       	rcall	.+786    	; 0x52e <puts>
// 	else if (interrupt & MCP_RX1IF){
// 		rx_flag = 1;
// 		// clear CANINTF.RX1IF
// 		MCP_bit_modify(MCP_CANINTF, 0x02, 0x00);
// 	}
}
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	bf 91       	pop	r27
 222:	af 91       	pop	r26
 224:	9f 91       	pop	r25
 226:	8f 91       	pop	r24
 228:	7f 91       	pop	r23
 22a:	6f 91       	pop	r22
 22c:	5f 91       	pop	r21
 22e:	4f 91       	pop	r20
 230:	3f 91       	pop	r19
 232:	2f 91       	pop	r18
 234:	0f 90       	pop	r0
 236:	0b be       	out	0x3b, r0	; 59
 238:	0f 90       	pop	r0
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	0f 90       	pop	r0
 23e:	1f 90       	pop	r1
 240:	18 95       	reti

00000242 <IR_read>:
uint8_t IR_read( void )
{
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
 242:	76 df       	rcall	.-276    	; 0x130 <ADC_read>
 244:	ed e4       	ldi	r30, 0x4D	; 77
 246:	f3 e0       	ldi	r31, 0x03	; 3
 248:	80 83       	st	Z, r24
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 24a:	93 81       	ldd	r25, Z+3	; 0x03
		if (i != 0){
			values[i] = values[i - 1];
 24c:	22 81       	ldd	r18, Z+2	; 0x02
 24e:	23 83       	std	Z+3, r18	; 0x03
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	29 0f       	add	r18, r25
 254:	31 1d       	adc	r19, r1
		if (i != 0){
			values[i] = values[i - 1];
 256:	91 81       	ldd	r25, Z+1	; 0x01
 258:	92 83       	std	Z+2, r25	; 0x02
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 25a:	29 0f       	add	r18, r25
 25c:	31 1d       	adc	r19, r1
		if (i != 0){
			values[i] = values[i - 1];
 25e:	81 83       	std	Z+1, r24	; 0x01
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 260:	a9 01       	movw	r20, r18
 262:	48 0f       	add	r20, r24
 264:	51 1d       	adc	r21, r1
 266:	ca 01       	movw	r24, r20
		if (i != 0){
			values[i] = values[i - 1];
		}
	}
	avg = avg / 4;
	return avg;
 268:	99 23       	and	r25, r25
 26a:	0c f4       	brge	.+2      	; 0x26e <IR_read+0x2c>
 26c:	03 96       	adiw	r24, 0x03	; 3
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	95 95       	asr	r25
 274:	87 95       	ror	r24
 276:	08 95       	ret

00000278 <main>:
	int prev_ir_val = 0;
	

    int main(void){
		
		cli();
 278:	f8 94       	cli
		
		DDRF &= ~(1 << PINF0); //Set F0(ADC0) as input
 27a:	80 98       	cbi	0x10, 0	; 16
		
		EICRA |= (0 << ISC21) | (0 << ISC20);
 27c:	e9 e6       	ldi	r30, 0x69	; 105
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	80 83       	st	Z, r24
		// Enable external interrupts of INT2
		EIMSK |= (1 << INT2);
 284:	ea 9a       	sbi	0x1d, 2	; 29
		
		DDRD &= ~(1 << PIND2);		//Set D2(INT2) as input
 286:	52 98       	cbi	0x0a, 2	; 10
		//int variabel = 1;
		
		can_msg can_msg_send;
		volatile can_msg can_msg_receive;
		
		UART_Init(UBRREG);
 288:	87 e6       	ldi	r24, 0x67	; 103
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	e0 d0       	rcall	.+448    	; 0x44e <UART_Init>
 		SPI_init();
 28e:	a1 d0       	rcall	.+322    	; 0x3d2 <SPI_init>
 		MCP_init();
 290:	6f d0       	rcall	.+222    	; 0x370 <MCP_init>
 292:	5e df       	rcall	.-324    	; 0x150 <CAN_init>

		if (CAN_init() == 0) {
 294:	89 2b       	or	r24, r25
 296:	41 f4       	brne	.+16     	; 0x2a8 <main+0x30>
 298:	88 e8       	ldi	r24, 0x88	; 136
 29a:	92 e0       	ldi	r25, 0x02	; 2
			printf("CAN BE WORKING\n\r");
 29c:	9f 93       	push	r25
 29e:	8f 93       	push	r24
 2a0:	33 d1       	rcall	.+614    	; 0x508 <printf>
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	07 c0       	rjmp	.+14     	; 0x2b6 <main+0x3e>
 2a8:	89 e9       	ldi	r24, 0x99	; 153
 2aa:	92 e0       	ldi	r25, 0x02	; 2
			can_msg_send.id = 2;
			can_msg_send.length = 8;
			} else {
			printf("CAN NOT BE WORKING \n\r");
 2ac:	9f 93       	push	r25
 2ae:	8f 93       	push	r24
 2b0:	2b d1       	rcall	.+598    	; 0x508 <printf>
 2b2:	0f 90       	pop	r0
 2b4:	0f 90       	pop	r0
 2b6:	36 df       	rcall	.-404    	; 0x124 <ADC_init>
 2b8:	78 94       	sei
		}
		
		ADC_init();
 2ba:	cf ea       	ldi	r28, 0xAF	; 175
 2bc:	d2 e0       	ldi	r29, 0x02	; 2

		sei();
 2be:	0f 2e       	mov	r0, r31

	while(1){
			
		ir_val = IR_read();
		printf("ting er av verdi %d\n\r",ir_val);
 2c0:	f5 ec       	ldi	r31, 0xC5	; 197
 2c2:	ef 2e       	mov	r14, r31
		if (ir_val - prev_ir_val != 0){
			if (ir_val == 0){
				printf("Lives have been reduced\n\r");
 2c4:	f2 e0       	ldi	r31, 0x02	; 2
 2c6:	ff 2e       	mov	r15, r31
 2c8:	f0 2d       	mov	r31, r0
 2ca:	0f ed       	ldi	r16, 0xDF	; 223
 2cc:	12 e0       	ldi	r17, 0x02	; 2
			}
			prev_ir_val = ir_val;
			printf("lives have not been reduced\n\r");
 2ce:	b9 df       	rcall	.-142    	; 0x242 <IR_read>
 2d0:	28 2f       	mov	r18, r24

		sei();

	while(1){
			
		ir_val = IR_read();
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <ir_val+0x1>
 2d8:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <ir_val>
 2dc:	1f 92       	push	r1
 2de:	8f 93       	push	r24
		printf("ting er av verdi %d\n\r",ir_val);
 2e0:	df 93       	push	r29
 2e2:	cf 93       	push	r28
 2e4:	11 d1       	rcall	.+546    	; 0x508 <printf>
 2e6:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <ir_val>
 2ea:	90 91 54 03 	lds	r25, 0x0354	; 0x800354 <ir_val+0x1>
		if (ir_val - prev_ir_val != 0){
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	20 91 51 03 	lds	r18, 0x0351	; 0x800351 <prev_ir_val>
 2fa:	30 91 52 03 	lds	r19, 0x0352	; 0x800352 <prev_ir_val+0x1>
 2fe:	82 17       	cp	r24, r18
 300:	93 07       	cpc	r25, r19
 302:	29 f3       	breq	.-54     	; 0x2ce <main+0x56>
 304:	89 2b       	or	r24, r25
 306:	29 f4       	brne	.+10     	; 0x312 <main+0x9a>
			if (ir_val == 0){
 308:	ff 92       	push	r15
 30a:	ef 92       	push	r14
				printf("Lives have been reduced\n\r");
 30c:	fd d0       	rcall	.+506    	; 0x508 <printf>
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <ir_val>
 316:	90 91 54 03 	lds	r25, 0x0354	; 0x800354 <ir_val+0x1>
			}
			prev_ir_val = ir_val;
 31a:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <prev_ir_val+0x1>
 31e:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <prev_ir_val>
 322:	1f 93       	push	r17
 324:	0f 93       	push	r16
			printf("lives have not been reduced\n\r");
 326:	f0 d0       	rcall	.+480    	; 0x508 <printf>
 328:	0f 90       	pop	r0
 32a:	0f 90       	pop	r0
 32c:	d0 cf       	rjmp	.-96     	; 0x2ce <main+0x56>

0000032e <MCP_reset>:
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	71 d0       	rcall	.+226    	; 0x416 <SPI_set_ss>
	SPI_send(MCP_READ_STATUS);
	uint8_t status = SPI_send(0);
	SPI_set_ss(1);
	
	return status;
}
 334:	80 ec       	ldi	r24, 0xC0	; 192
 336:	69 d0       	rcall	.+210    	; 0x40a <SPI_send>
 338:	8f e1       	ldi	r24, 0x1F	; 31
 33a:	93 e0       	ldi	r25, 0x03	; 3
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	f1 f7       	brne	.-4      	; 0x33c <MCP_reset+0xe>
 340:	00 c0       	rjmp	.+0      	; 0x342 <MCP_reset+0x14>
 342:	00 00       	nop
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	66 c0       	rjmp	.+204    	; 0x416 <SPI_set_ss>
 34a:	08 95       	ret

0000034c <MCP_read>:
 34c:	cf 93       	push	r28
 34e:	c8 2f       	mov	r28, r24
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	60 d0       	rcall	.+192    	; 0x416 <SPI_set_ss>
 356:	83 e0       	ldi	r24, 0x03	; 3
 358:	58 d0       	rcall	.+176    	; 0x40a <SPI_send>
 35a:	8c 2f       	mov	r24, r28
 35c:	56 d0       	rcall	.+172    	; 0x40a <SPI_send>
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	54 d0       	rcall	.+168    	; 0x40a <SPI_send>
 362:	c8 2f       	mov	r28, r24
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	56 d0       	rcall	.+172    	; 0x416 <SPI_set_ss>
 36a:	8c 2f       	mov	r24, r28
 36c:	cf 91       	pop	r28
 36e:	08 95       	ret

00000370 <MCP_init>:
 370:	30 d0       	rcall	.+96     	; 0x3d2 <SPI_init>
 372:	dd df       	rcall	.-70     	; 0x32e <MCP_reset>
 374:	8d ef       	ldi	r24, 0xFD	; 253
 376:	92 e0       	ldi	r25, 0x02	; 2
 378:	9f 93       	push	r25
 37a:	8f 93       	push	r24
 37c:	c5 d0       	rcall	.+394    	; 0x508 <printf>
 37e:	8e e0       	ldi	r24, 0x0E	; 14
 380:	e5 df       	rcall	.-54     	; 0x34c <MCP_read>
 382:	80 7e       	andi	r24, 0xE0	; 224
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	80 38       	cpi	r24, 0x80	; 128
 38a:	49 f0       	breq	.+18     	; 0x39e <MCP_init+0x2e>
 38c:	87 e0       	ldi	r24, 0x07	; 7
 38e:	93 e0       	ldi	r25, 0x03	; 3
 390:	9f 93       	push	r25
 392:	8f 93       	push	r24
 394:	b9 d0       	rcall	.+370    	; 0x508 <printf>
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	08 95       	ret
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	08 95       	ret

000003a2 <MCP_bit_modify>:

void MCP_bit_modify( uint8_t address, uint8_t mask, uint8_t data )
{
 3a2:	1f 93       	push	r17
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	18 2f       	mov	r17, r24
 3aa:	d6 2f       	mov	r29, r22
 3ac:	c4 2f       	mov	r28, r20
	SPI_set_ss(0);
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	31 d0       	rcall	.+98     	; 0x416 <SPI_set_ss>
	SPI_send(MCP_BITMOD);
 3b4:	85 e0       	ldi	r24, 0x05	; 5
 3b6:	29 d0       	rcall	.+82     	; 0x40a <SPI_send>
	
	SPI_send(address);
 3b8:	81 2f       	mov	r24, r17
 3ba:	27 d0       	rcall	.+78     	; 0x40a <SPI_send>
	SPI_send(mask);
 3bc:	8d 2f       	mov	r24, r29
 3be:	25 d0       	rcall	.+74     	; 0x40a <SPI_send>
	SPI_send(data);
 3c0:	8c 2f       	mov	r24, r28
 3c2:	23 d0       	rcall	.+70     	; 0x40a <SPI_send>
	
	SPI_set_ss(1);
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	26 d0       	rcall	.+76     	; 0x416 <SPI_set_ss>
 3ca:	df 91       	pop	r29
}
 3cc:	cf 91       	pop	r28
 3ce:	1f 91       	pop	r17
 3d0:	08 95       	ret

000003d2 <SPI_init>:
 3d2:	89 e2       	ldi	r24, 0x29	; 41
	
	//Wait for data to be received
	while(!(SPSR & (1<<SPIF)));
	
	return SPDR;
}
 3d4:	93 e0       	ldi	r25, 0x03	; 3
 3d6:	9f 93       	push	r25
 3d8:	8f 93       	push	r24
 3da:	96 d0       	rcall	.+300    	; 0x508 <printf>
 3dc:	84 b1       	in	r24, 0x04	; 4
 3de:	87 68       	ori	r24, 0x87	; 135
 3e0:	84 b9       	out	0x04, r24	; 4
 3e2:	23 98       	cbi	0x04, 3	; 4
 3e4:	87 e3       	ldi	r24, 0x37	; 55
 3e6:	93 e0       	ldi	r25, 0x03	; 3
 3e8:	9f 93       	push	r25
 3ea:	8f 93       	push	r24
 3ec:	8d d0       	rcall	.+282    	; 0x508 <printf>
 3ee:	81 e5       	ldi	r24, 0x51	; 81
 3f0:	8c bd       	out	0x2c, r24	; 44
 3f2:	81 e4       	ldi	r24, 0x41	; 65
 3f4:	93 e0       	ldi	r25, 0x03	; 3
 3f6:	9f 93       	push	r25
 3f8:	8f 93       	push	r24
 3fa:	86 d0       	rcall	.+268    	; 0x508 <printf>
 3fc:	0f 90       	pop	r0
 3fe:	0f 90       	pop	r0
 400:	0f 90       	pop	r0
 402:	0f 90       	pop	r0
 404:	0f 90       	pop	r0
 406:	0f 90       	pop	r0
 408:	08 95       	ret

0000040a <SPI_send>:
 40a:	8e bd       	out	0x2e, r24	; 46
 40c:	0d b4       	in	r0, 0x2d	; 45
 40e:	07 fe       	sbrs	r0, 7
 410:	fd cf       	rjmp	.-6      	; 0x40c <SPI_send+0x2>
 412:	8e b5       	in	r24, 0x2e	; 46
 414:	08 95       	ret

00000416 <SPI_set_ss>:


void SPI_set_ss( int select )
{
	//for ATmega 162 set chip-select
	if (select == 1){
 416:	81 30       	cpi	r24, 0x01	; 1
 418:	91 05       	cpc	r25, r1
 41a:	11 f4       	brne	.+4      	; 0x420 <SPI_set_ss+0xa>
		set_bit(PORTB, SPI_SS);
 41c:	2f 9a       	sbi	0x05, 7	; 5
 41e:	08 95       	ret
	}
	else if (select == 0){
 420:	89 2b       	or	r24, r25
 422:	09 f4       	brne	.+2      	; 0x426 <SPI_set_ss+0x10>
		clear_bit(PORTB, SPI_SS);
 424:	2f 98       	cbi	0x05, 7	; 5
 426:	08 95       	ret

00000428 <UART_TX>:
}

int UART_TX(char data, FILE * _in){
	(void)(_in);
	
	while( !(UCSR0A & (1 << UDRE0)) );
 428:	e0 ec       	ldi	r30, 0xC0	; 192
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	90 81       	ld	r25, Z
 42e:	95 ff       	sbrs	r25, 5
 430:	fd cf       	rjmp	.-6      	; 0x42c <UART_TX+0x4>
	
	// send data
	UDR0 = data;
 432:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	return 0;
}
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	08 95       	ret

0000043c <UART_RX>:

int UART_RX(FILE * _in ){
	(void)(_in);
	while( !(UCSR0A & (1 << RXC0)) );
 43c:	e0 ec       	ldi	r30, 0xC0	; 192
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z
 442:	88 23       	and	r24, r24
 444:	ec f7       	brge	.-6      	; 0x440 <UART_RX+0x4>
	
	// Data recieved
	return UDR0;
 446:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	08 95       	ret

0000044e <UART_Init>:


void UART_Init(unsigned int ubrr)
{
	// Baud rate
	UBRR0H = (unsigned char)(ubrr >> 8);
 44e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)(ubrr);
 452:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	// Enable Rx and Tx
	
	UCSR0B = (1 << RXEN0 ) | (1 << TXEN0);
 456:	88 e1       	ldi	r24, 0x18	; 24
 458:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1 << USBS0);
 45c:	e2 ec       	ldi	r30, 0xC2	; 194
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	88 e0       	ldi	r24, 0x08	; 8
 462:	80 83       	st	Z, r24
	UCSR0C = (3 << UCSZ00);
 464:	86 e0       	ldi	r24, 0x06	; 6
 466:	80 83       	st	Z, r24
	
	

	
	fdevopen(UART_TX, UART_RX);
 468:	6e e1       	ldi	r22, 0x1E	; 30
 46a:	72 e0       	ldi	r23, 0x02	; 2
 46c:	84 e1       	ldi	r24, 0x14	; 20
 46e:	92 e0       	ldi	r25, 0x02	; 2
 470:	01 c0       	rjmp	.+2      	; 0x474 <fdevopen>
 472:	08 95       	ret

00000474 <fdevopen>:
 474:	0f 93       	push	r16
 476:	1f 93       	push	r17
 478:	cf 93       	push	r28
 47a:	df 93       	push	r29
 47c:	00 97       	sbiw	r24, 0x00	; 0
 47e:	31 f4       	brne	.+12     	; 0x48c <fdevopen+0x18>
 480:	61 15       	cp	r22, r1
 482:	71 05       	cpc	r23, r1
 484:	19 f4       	brne	.+6      	; 0x48c <fdevopen+0x18>
 486:	80 e0       	ldi	r24, 0x00	; 0
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	39 c0       	rjmp	.+114    	; 0x4fe <fdevopen+0x8a>
 48c:	8b 01       	movw	r16, r22
 48e:	ec 01       	movw	r28, r24
 490:	6e e0       	ldi	r22, 0x0E	; 14
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	77 d2       	rcall	.+1262   	; 0x988 <calloc>
 49a:	fc 01       	movw	r30, r24
 49c:	89 2b       	or	r24, r25
 49e:	99 f3       	breq	.-26     	; 0x486 <fdevopen+0x12>
 4a0:	80 e8       	ldi	r24, 0x80	; 128
 4a2:	83 83       	std	Z+3, r24	; 0x03
 4a4:	01 15       	cp	r16, r1
 4a6:	11 05       	cpc	r17, r1
 4a8:	71 f0       	breq	.+28     	; 0x4c6 <fdevopen+0x52>
 4aa:	13 87       	std	Z+11, r17	; 0x0b
 4ac:	02 87       	std	Z+10, r16	; 0x0a
 4ae:	81 e8       	ldi	r24, 0x81	; 129
 4b0:	83 83       	std	Z+3, r24	; 0x03
 4b2:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <__iob>
 4b6:	90 91 58 03 	lds	r25, 0x0358	; 0x800358 <__iob+0x1>
 4ba:	89 2b       	or	r24, r25
 4bc:	21 f4       	brne	.+8      	; 0x4c6 <fdevopen+0x52>
 4be:	f0 93 58 03 	sts	0x0358, r31	; 0x800358 <__iob+0x1>
 4c2:	e0 93 57 03 	sts	0x0357, r30	; 0x800357 <__iob>
 4c6:	20 97       	sbiw	r28, 0x00	; 0
 4c8:	c9 f0       	breq	.+50     	; 0x4fc <fdevopen+0x88>
 4ca:	d1 87       	std	Z+9, r29	; 0x09
 4cc:	c0 87       	std	Z+8, r28	; 0x08
 4ce:	83 81       	ldd	r24, Z+3	; 0x03
 4d0:	82 60       	ori	r24, 0x02	; 2
 4d2:	83 83       	std	Z+3, r24	; 0x03
 4d4:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <__iob+0x2>
 4d8:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <__iob+0x3>
 4dc:	89 2b       	or	r24, r25
 4de:	71 f4       	brne	.+28     	; 0x4fc <fdevopen+0x88>
 4e0:	f0 93 5a 03 	sts	0x035A, r31	; 0x80035a <__iob+0x3>
 4e4:	e0 93 59 03 	sts	0x0359, r30	; 0x800359 <__iob+0x2>
 4e8:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <__iob+0x4>
 4ec:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <__iob+0x5>
 4f0:	89 2b       	or	r24, r25
 4f2:	21 f4       	brne	.+8      	; 0x4fc <fdevopen+0x88>
 4f4:	f0 93 5c 03 	sts	0x035C, r31	; 0x80035c <__iob+0x5>
 4f8:	e0 93 5b 03 	sts	0x035B, r30	; 0x80035b <__iob+0x4>
 4fc:	cf 01       	movw	r24, r30
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	1f 91       	pop	r17
 504:	0f 91       	pop	r16
 506:	08 95       	ret

00000508 <printf>:
 508:	cf 93       	push	r28
 50a:	df 93       	push	r29
 50c:	cd b7       	in	r28, 0x3d	; 61
 50e:	de b7       	in	r29, 0x3e	; 62
 510:	ae 01       	movw	r20, r28
 512:	4a 5f       	subi	r20, 0xFA	; 250
 514:	5f 4f       	sbci	r21, 0xFF	; 255
 516:	fa 01       	movw	r30, r20
 518:	61 91       	ld	r22, Z+
 51a:	71 91       	ld	r23, Z+
 51c:	af 01       	movw	r20, r30
 51e:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <__iob+0x2>
 522:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <__iob+0x3>
 526:	33 d0       	rcall	.+102    	; 0x58e <vfprintf>
 528:	df 91       	pop	r29
 52a:	cf 91       	pop	r28
 52c:	08 95       	ret

0000052e <puts>:
 52e:	0f 93       	push	r16
 530:	1f 93       	push	r17
 532:	cf 93       	push	r28
 534:	df 93       	push	r29
 536:	e0 91 59 03 	lds	r30, 0x0359	; 0x800359 <__iob+0x2>
 53a:	f0 91 5a 03 	lds	r31, 0x035A	; 0x80035a <__iob+0x3>
 53e:	23 81       	ldd	r18, Z+3	; 0x03
 540:	21 ff       	sbrs	r18, 1
 542:	1b c0       	rjmp	.+54     	; 0x57a <puts+0x4c>
 544:	8c 01       	movw	r16, r24
 546:	d0 e0       	ldi	r29, 0x00	; 0
 548:	c0 e0       	ldi	r28, 0x00	; 0
 54a:	f8 01       	movw	r30, r16
 54c:	81 91       	ld	r24, Z+
 54e:	8f 01       	movw	r16, r30
 550:	60 91 59 03 	lds	r22, 0x0359	; 0x800359 <__iob+0x2>
 554:	70 91 5a 03 	lds	r23, 0x035A	; 0x80035a <__iob+0x3>
 558:	db 01       	movw	r26, r22
 55a:	18 96       	adiw	r26, 0x08	; 8
 55c:	ed 91       	ld	r30, X+
 55e:	fc 91       	ld	r31, X
 560:	19 97       	sbiw	r26, 0x09	; 9
 562:	88 23       	and	r24, r24
 564:	31 f0       	breq	.+12     	; 0x572 <puts+0x44>
 566:	19 95       	eicall
 568:	89 2b       	or	r24, r25
 56a:	79 f3       	breq	.-34     	; 0x54a <puts+0x1c>
 56c:	df ef       	ldi	r29, 0xFF	; 255
 56e:	cf ef       	ldi	r28, 0xFF	; 255
 570:	ec cf       	rjmp	.-40     	; 0x54a <puts+0x1c>
 572:	8a e0       	ldi	r24, 0x0A	; 10
 574:	19 95       	eicall
 576:	89 2b       	or	r24, r25
 578:	19 f0       	breq	.+6      	; 0x580 <puts+0x52>
 57a:	8f ef       	ldi	r24, 0xFF	; 255
 57c:	9f ef       	ldi	r25, 0xFF	; 255
 57e:	02 c0       	rjmp	.+4      	; 0x584 <puts+0x56>
 580:	8d 2f       	mov	r24, r29
 582:	9c 2f       	mov	r25, r28
 584:	df 91       	pop	r29
 586:	cf 91       	pop	r28
 588:	1f 91       	pop	r17
 58a:	0f 91       	pop	r16
 58c:	08 95       	ret

0000058e <vfprintf>:
 58e:	2f 92       	push	r2
 590:	3f 92       	push	r3
 592:	4f 92       	push	r4
 594:	5f 92       	push	r5
 596:	6f 92       	push	r6
 598:	7f 92       	push	r7
 59a:	8f 92       	push	r8
 59c:	9f 92       	push	r9
 59e:	af 92       	push	r10
 5a0:	bf 92       	push	r11
 5a2:	cf 92       	push	r12
 5a4:	df 92       	push	r13
 5a6:	ef 92       	push	r14
 5a8:	ff 92       	push	r15
 5aa:	0f 93       	push	r16
 5ac:	1f 93       	push	r17
 5ae:	cf 93       	push	r28
 5b0:	df 93       	push	r29
 5b2:	cd b7       	in	r28, 0x3d	; 61
 5b4:	de b7       	in	r29, 0x3e	; 62
 5b6:	2b 97       	sbiw	r28, 0x0b	; 11
 5b8:	0f b6       	in	r0, 0x3f	; 63
 5ba:	f8 94       	cli
 5bc:	de bf       	out	0x3e, r29	; 62
 5be:	0f be       	out	0x3f, r0	; 63
 5c0:	cd bf       	out	0x3d, r28	; 61
 5c2:	6c 01       	movw	r12, r24
 5c4:	7b 01       	movw	r14, r22
 5c6:	8a 01       	movw	r16, r20
 5c8:	fc 01       	movw	r30, r24
 5ca:	17 82       	std	Z+7, r1	; 0x07
 5cc:	16 82       	std	Z+6, r1	; 0x06
 5ce:	83 81       	ldd	r24, Z+3	; 0x03
 5d0:	81 ff       	sbrs	r24, 1
 5d2:	bf c1       	rjmp	.+894    	; 0x952 <vfprintf+0x3c4>
 5d4:	ce 01       	movw	r24, r28
 5d6:	01 96       	adiw	r24, 0x01	; 1
 5d8:	3c 01       	movw	r6, r24
 5da:	f6 01       	movw	r30, r12
 5dc:	93 81       	ldd	r25, Z+3	; 0x03
 5de:	f7 01       	movw	r30, r14
 5e0:	93 fd       	sbrc	r25, 3
 5e2:	85 91       	lpm	r24, Z+
 5e4:	93 ff       	sbrs	r25, 3
 5e6:	81 91       	ld	r24, Z+
 5e8:	7f 01       	movw	r14, r30
 5ea:	88 23       	and	r24, r24
 5ec:	09 f4       	brne	.+2      	; 0x5f0 <vfprintf+0x62>
 5ee:	ad c1       	rjmp	.+858    	; 0x94a <vfprintf+0x3bc>
 5f0:	85 32       	cpi	r24, 0x25	; 37
 5f2:	39 f4       	brne	.+14     	; 0x602 <vfprintf+0x74>
 5f4:	93 fd       	sbrc	r25, 3
 5f6:	85 91       	lpm	r24, Z+
 5f8:	93 ff       	sbrs	r25, 3
 5fa:	81 91       	ld	r24, Z+
 5fc:	7f 01       	movw	r14, r30
 5fe:	85 32       	cpi	r24, 0x25	; 37
 600:	21 f4       	brne	.+8      	; 0x60a <vfprintf+0x7c>
 602:	b6 01       	movw	r22, r12
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	18 d3       	rcall	.+1584   	; 0xc38 <fputc>
 608:	e8 cf       	rjmp	.-48     	; 0x5da <vfprintf+0x4c>
 60a:	91 2c       	mov	r9, r1
 60c:	21 2c       	mov	r2, r1
 60e:	31 2c       	mov	r3, r1
 610:	ff e1       	ldi	r31, 0x1F	; 31
 612:	f3 15       	cp	r31, r3
 614:	d8 f0       	brcs	.+54     	; 0x64c <vfprintf+0xbe>
 616:	8b 32       	cpi	r24, 0x2B	; 43
 618:	79 f0       	breq	.+30     	; 0x638 <vfprintf+0xaa>
 61a:	38 f4       	brcc	.+14     	; 0x62a <vfprintf+0x9c>
 61c:	80 32       	cpi	r24, 0x20	; 32
 61e:	79 f0       	breq	.+30     	; 0x63e <vfprintf+0xb0>
 620:	83 32       	cpi	r24, 0x23	; 35
 622:	a1 f4       	brne	.+40     	; 0x64c <vfprintf+0xbe>
 624:	23 2d       	mov	r18, r3
 626:	20 61       	ori	r18, 0x10	; 16
 628:	1d c0       	rjmp	.+58     	; 0x664 <vfprintf+0xd6>
 62a:	8d 32       	cpi	r24, 0x2D	; 45
 62c:	61 f0       	breq	.+24     	; 0x646 <vfprintf+0xb8>
 62e:	80 33       	cpi	r24, 0x30	; 48
 630:	69 f4       	brne	.+26     	; 0x64c <vfprintf+0xbe>
 632:	23 2d       	mov	r18, r3
 634:	21 60       	ori	r18, 0x01	; 1
 636:	16 c0       	rjmp	.+44     	; 0x664 <vfprintf+0xd6>
 638:	83 2d       	mov	r24, r3
 63a:	82 60       	ori	r24, 0x02	; 2
 63c:	38 2e       	mov	r3, r24
 63e:	e3 2d       	mov	r30, r3
 640:	e4 60       	ori	r30, 0x04	; 4
 642:	3e 2e       	mov	r3, r30
 644:	2a c0       	rjmp	.+84     	; 0x69a <vfprintf+0x10c>
 646:	f3 2d       	mov	r31, r3
 648:	f8 60       	ori	r31, 0x08	; 8
 64a:	1d c0       	rjmp	.+58     	; 0x686 <vfprintf+0xf8>
 64c:	37 fc       	sbrc	r3, 7
 64e:	2d c0       	rjmp	.+90     	; 0x6aa <vfprintf+0x11c>
 650:	20 ed       	ldi	r18, 0xD0	; 208
 652:	28 0f       	add	r18, r24
 654:	2a 30       	cpi	r18, 0x0A	; 10
 656:	40 f0       	brcs	.+16     	; 0x668 <vfprintf+0xda>
 658:	8e 32       	cpi	r24, 0x2E	; 46
 65a:	b9 f4       	brne	.+46     	; 0x68a <vfprintf+0xfc>
 65c:	36 fc       	sbrc	r3, 6
 65e:	75 c1       	rjmp	.+746    	; 0x94a <vfprintf+0x3bc>
 660:	23 2d       	mov	r18, r3
 662:	20 64       	ori	r18, 0x40	; 64
 664:	32 2e       	mov	r3, r18
 666:	19 c0       	rjmp	.+50     	; 0x69a <vfprintf+0x10c>
 668:	36 fe       	sbrs	r3, 6
 66a:	06 c0       	rjmp	.+12     	; 0x678 <vfprintf+0xea>
 66c:	8a e0       	ldi	r24, 0x0A	; 10
 66e:	98 9e       	mul	r9, r24
 670:	20 0d       	add	r18, r0
 672:	11 24       	eor	r1, r1
 674:	92 2e       	mov	r9, r18
 676:	11 c0       	rjmp	.+34     	; 0x69a <vfprintf+0x10c>
 678:	ea e0       	ldi	r30, 0x0A	; 10
 67a:	2e 9e       	mul	r2, r30
 67c:	20 0d       	add	r18, r0
 67e:	11 24       	eor	r1, r1
 680:	22 2e       	mov	r2, r18
 682:	f3 2d       	mov	r31, r3
 684:	f0 62       	ori	r31, 0x20	; 32
 686:	3f 2e       	mov	r3, r31
 688:	08 c0       	rjmp	.+16     	; 0x69a <vfprintf+0x10c>
 68a:	8c 36       	cpi	r24, 0x6C	; 108
 68c:	21 f4       	brne	.+8      	; 0x696 <vfprintf+0x108>
 68e:	83 2d       	mov	r24, r3
 690:	80 68       	ori	r24, 0x80	; 128
 692:	38 2e       	mov	r3, r24
 694:	02 c0       	rjmp	.+4      	; 0x69a <vfprintf+0x10c>
 696:	88 36       	cpi	r24, 0x68	; 104
 698:	41 f4       	brne	.+16     	; 0x6aa <vfprintf+0x11c>
 69a:	f7 01       	movw	r30, r14
 69c:	93 fd       	sbrc	r25, 3
 69e:	85 91       	lpm	r24, Z+
 6a0:	93 ff       	sbrs	r25, 3
 6a2:	81 91       	ld	r24, Z+
 6a4:	7f 01       	movw	r14, r30
 6a6:	81 11       	cpse	r24, r1
 6a8:	b3 cf       	rjmp	.-154    	; 0x610 <vfprintf+0x82>
 6aa:	98 2f       	mov	r25, r24
 6ac:	9f 7d       	andi	r25, 0xDF	; 223
 6ae:	95 54       	subi	r25, 0x45	; 69
 6b0:	93 30       	cpi	r25, 0x03	; 3
 6b2:	28 f4       	brcc	.+10     	; 0x6be <vfprintf+0x130>
 6b4:	0c 5f       	subi	r16, 0xFC	; 252
 6b6:	1f 4f       	sbci	r17, 0xFF	; 255
 6b8:	9f e3       	ldi	r25, 0x3F	; 63
 6ba:	99 83       	std	Y+1, r25	; 0x01
 6bc:	0d c0       	rjmp	.+26     	; 0x6d8 <vfprintf+0x14a>
 6be:	83 36       	cpi	r24, 0x63	; 99
 6c0:	31 f0       	breq	.+12     	; 0x6ce <vfprintf+0x140>
 6c2:	83 37       	cpi	r24, 0x73	; 115
 6c4:	71 f0       	breq	.+28     	; 0x6e2 <vfprintf+0x154>
 6c6:	83 35       	cpi	r24, 0x53	; 83
 6c8:	09 f0       	breq	.+2      	; 0x6cc <vfprintf+0x13e>
 6ca:	55 c0       	rjmp	.+170    	; 0x776 <vfprintf+0x1e8>
 6cc:	20 c0       	rjmp	.+64     	; 0x70e <vfprintf+0x180>
 6ce:	f8 01       	movw	r30, r16
 6d0:	80 81       	ld	r24, Z
 6d2:	89 83       	std	Y+1, r24	; 0x01
 6d4:	0e 5f       	subi	r16, 0xFE	; 254
 6d6:	1f 4f       	sbci	r17, 0xFF	; 255
 6d8:	88 24       	eor	r8, r8
 6da:	83 94       	inc	r8
 6dc:	91 2c       	mov	r9, r1
 6de:	53 01       	movw	r10, r6
 6e0:	12 c0       	rjmp	.+36     	; 0x706 <vfprintf+0x178>
 6e2:	28 01       	movw	r4, r16
 6e4:	f2 e0       	ldi	r31, 0x02	; 2
 6e6:	4f 0e       	add	r4, r31
 6e8:	51 1c       	adc	r5, r1
 6ea:	f8 01       	movw	r30, r16
 6ec:	a0 80       	ld	r10, Z
 6ee:	b1 80       	ldd	r11, Z+1	; 0x01
 6f0:	36 fe       	sbrs	r3, 6
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <vfprintf+0x16c>
 6f4:	69 2d       	mov	r22, r9
 6f6:	70 e0       	ldi	r23, 0x00	; 0
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <vfprintf+0x170>
 6fa:	6f ef       	ldi	r22, 0xFF	; 255
 6fc:	7f ef       	ldi	r23, 0xFF	; 255
 6fe:	c5 01       	movw	r24, r10
 700:	90 d2       	rcall	.+1312   	; 0xc22 <strnlen>
 702:	4c 01       	movw	r8, r24
 704:	82 01       	movw	r16, r4
 706:	f3 2d       	mov	r31, r3
 708:	ff 77       	andi	r31, 0x7F	; 127
 70a:	3f 2e       	mov	r3, r31
 70c:	15 c0       	rjmp	.+42     	; 0x738 <vfprintf+0x1aa>
 70e:	28 01       	movw	r4, r16
 710:	22 e0       	ldi	r18, 0x02	; 2
 712:	42 0e       	add	r4, r18
 714:	51 1c       	adc	r5, r1
 716:	f8 01       	movw	r30, r16
 718:	a0 80       	ld	r10, Z
 71a:	b1 80       	ldd	r11, Z+1	; 0x01
 71c:	36 fe       	sbrs	r3, 6
 71e:	03 c0       	rjmp	.+6      	; 0x726 <vfprintf+0x198>
 720:	69 2d       	mov	r22, r9
 722:	70 e0       	ldi	r23, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <vfprintf+0x19c>
 726:	6f ef       	ldi	r22, 0xFF	; 255
 728:	7f ef       	ldi	r23, 0xFF	; 255
 72a:	c5 01       	movw	r24, r10
 72c:	68 d2       	rcall	.+1232   	; 0xbfe <strnlen_P>
 72e:	4c 01       	movw	r8, r24
 730:	f3 2d       	mov	r31, r3
 732:	f0 68       	ori	r31, 0x80	; 128
 734:	3f 2e       	mov	r3, r31
 736:	82 01       	movw	r16, r4
 738:	33 fc       	sbrc	r3, 3
 73a:	19 c0       	rjmp	.+50     	; 0x76e <vfprintf+0x1e0>
 73c:	82 2d       	mov	r24, r2
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	88 16       	cp	r8, r24
 742:	99 06       	cpc	r9, r25
 744:	a0 f4       	brcc	.+40     	; 0x76e <vfprintf+0x1e0>
 746:	b6 01       	movw	r22, r12
 748:	80 e2       	ldi	r24, 0x20	; 32
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	75 d2       	rcall	.+1258   	; 0xc38 <fputc>
 74e:	2a 94       	dec	r2
 750:	f5 cf       	rjmp	.-22     	; 0x73c <vfprintf+0x1ae>
 752:	f5 01       	movw	r30, r10
 754:	37 fc       	sbrc	r3, 7
 756:	85 91       	lpm	r24, Z+
 758:	37 fe       	sbrs	r3, 7
 75a:	81 91       	ld	r24, Z+
 75c:	5f 01       	movw	r10, r30
 75e:	b6 01       	movw	r22, r12
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	6a d2       	rcall	.+1236   	; 0xc38 <fputc>
 764:	21 10       	cpse	r2, r1
 766:	2a 94       	dec	r2
 768:	21 e0       	ldi	r18, 0x01	; 1
 76a:	82 1a       	sub	r8, r18
 76c:	91 08       	sbc	r9, r1
 76e:	81 14       	cp	r8, r1
 770:	91 04       	cpc	r9, r1
 772:	79 f7       	brne	.-34     	; 0x752 <vfprintf+0x1c4>
 774:	e1 c0       	rjmp	.+450    	; 0x938 <vfprintf+0x3aa>
 776:	84 36       	cpi	r24, 0x64	; 100
 778:	11 f0       	breq	.+4      	; 0x77e <vfprintf+0x1f0>
 77a:	89 36       	cpi	r24, 0x69	; 105
 77c:	39 f5       	brne	.+78     	; 0x7cc <vfprintf+0x23e>
 77e:	f8 01       	movw	r30, r16
 780:	37 fe       	sbrs	r3, 7
 782:	07 c0       	rjmp	.+14     	; 0x792 <vfprintf+0x204>
 784:	60 81       	ld	r22, Z
 786:	71 81       	ldd	r23, Z+1	; 0x01
 788:	82 81       	ldd	r24, Z+2	; 0x02
 78a:	93 81       	ldd	r25, Z+3	; 0x03
 78c:	0c 5f       	subi	r16, 0xFC	; 252
 78e:	1f 4f       	sbci	r17, 0xFF	; 255
 790:	08 c0       	rjmp	.+16     	; 0x7a2 <vfprintf+0x214>
 792:	60 81       	ld	r22, Z
 794:	71 81       	ldd	r23, Z+1	; 0x01
 796:	07 2e       	mov	r0, r23
 798:	00 0c       	add	r0, r0
 79a:	88 0b       	sbc	r24, r24
 79c:	99 0b       	sbc	r25, r25
 79e:	0e 5f       	subi	r16, 0xFE	; 254
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	f3 2d       	mov	r31, r3
 7a4:	ff 76       	andi	r31, 0x6F	; 111
 7a6:	3f 2e       	mov	r3, r31
 7a8:	97 ff       	sbrs	r25, 7
 7aa:	09 c0       	rjmp	.+18     	; 0x7be <vfprintf+0x230>
 7ac:	90 95       	com	r25
 7ae:	80 95       	com	r24
 7b0:	70 95       	com	r23
 7b2:	61 95       	neg	r22
 7b4:	7f 4f       	sbci	r23, 0xFF	; 255
 7b6:	8f 4f       	sbci	r24, 0xFF	; 255
 7b8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ba:	f0 68       	ori	r31, 0x80	; 128
 7bc:	3f 2e       	mov	r3, r31
 7be:	2a e0       	ldi	r18, 0x0A	; 10
 7c0:	30 e0       	ldi	r19, 0x00	; 0
 7c2:	a3 01       	movw	r20, r6
 7c4:	75 d2       	rcall	.+1258   	; 0xcb0 <__ultoa_invert>
 7c6:	88 2e       	mov	r8, r24
 7c8:	86 18       	sub	r8, r6
 7ca:	44 c0       	rjmp	.+136    	; 0x854 <vfprintf+0x2c6>
 7cc:	85 37       	cpi	r24, 0x75	; 117
 7ce:	31 f4       	brne	.+12     	; 0x7dc <vfprintf+0x24e>
 7d0:	23 2d       	mov	r18, r3
 7d2:	2f 7e       	andi	r18, 0xEF	; 239
 7d4:	b2 2e       	mov	r11, r18
 7d6:	2a e0       	ldi	r18, 0x0A	; 10
 7d8:	30 e0       	ldi	r19, 0x00	; 0
 7da:	25 c0       	rjmp	.+74     	; 0x826 <vfprintf+0x298>
 7dc:	93 2d       	mov	r25, r3
 7de:	99 7f       	andi	r25, 0xF9	; 249
 7e0:	b9 2e       	mov	r11, r25
 7e2:	8f 36       	cpi	r24, 0x6F	; 111
 7e4:	c1 f0       	breq	.+48     	; 0x816 <vfprintf+0x288>
 7e6:	18 f4       	brcc	.+6      	; 0x7ee <vfprintf+0x260>
 7e8:	88 35       	cpi	r24, 0x58	; 88
 7ea:	79 f0       	breq	.+30     	; 0x80a <vfprintf+0x27c>
 7ec:	ae c0       	rjmp	.+348    	; 0x94a <vfprintf+0x3bc>
 7ee:	80 37       	cpi	r24, 0x70	; 112
 7f0:	19 f0       	breq	.+6      	; 0x7f8 <vfprintf+0x26a>
 7f2:	88 37       	cpi	r24, 0x78	; 120
 7f4:	21 f0       	breq	.+8      	; 0x7fe <vfprintf+0x270>
 7f6:	a9 c0       	rjmp	.+338    	; 0x94a <vfprintf+0x3bc>
 7f8:	e9 2f       	mov	r30, r25
 7fa:	e0 61       	ori	r30, 0x10	; 16
 7fc:	be 2e       	mov	r11, r30
 7fe:	b4 fe       	sbrs	r11, 4
 800:	0d c0       	rjmp	.+26     	; 0x81c <vfprintf+0x28e>
 802:	fb 2d       	mov	r31, r11
 804:	f4 60       	ori	r31, 0x04	; 4
 806:	bf 2e       	mov	r11, r31
 808:	09 c0       	rjmp	.+18     	; 0x81c <vfprintf+0x28e>
 80a:	34 fe       	sbrs	r3, 4
 80c:	0a c0       	rjmp	.+20     	; 0x822 <vfprintf+0x294>
 80e:	29 2f       	mov	r18, r25
 810:	26 60       	ori	r18, 0x06	; 6
 812:	b2 2e       	mov	r11, r18
 814:	06 c0       	rjmp	.+12     	; 0x822 <vfprintf+0x294>
 816:	28 e0       	ldi	r18, 0x08	; 8
 818:	30 e0       	ldi	r19, 0x00	; 0
 81a:	05 c0       	rjmp	.+10     	; 0x826 <vfprintf+0x298>
 81c:	20 e1       	ldi	r18, 0x10	; 16
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	02 c0       	rjmp	.+4      	; 0x826 <vfprintf+0x298>
 822:	20 e1       	ldi	r18, 0x10	; 16
 824:	32 e0       	ldi	r19, 0x02	; 2
 826:	f8 01       	movw	r30, r16
 828:	b7 fe       	sbrs	r11, 7
 82a:	07 c0       	rjmp	.+14     	; 0x83a <vfprintf+0x2ac>
 82c:	60 81       	ld	r22, Z
 82e:	71 81       	ldd	r23, Z+1	; 0x01
 830:	82 81       	ldd	r24, Z+2	; 0x02
 832:	93 81       	ldd	r25, Z+3	; 0x03
 834:	0c 5f       	subi	r16, 0xFC	; 252
 836:	1f 4f       	sbci	r17, 0xFF	; 255
 838:	06 c0       	rjmp	.+12     	; 0x846 <vfprintf+0x2b8>
 83a:	60 81       	ld	r22, Z
 83c:	71 81       	ldd	r23, Z+1	; 0x01
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	0e 5f       	subi	r16, 0xFE	; 254
 844:	1f 4f       	sbci	r17, 0xFF	; 255
 846:	a3 01       	movw	r20, r6
 848:	33 d2       	rcall	.+1126   	; 0xcb0 <__ultoa_invert>
 84a:	88 2e       	mov	r8, r24
 84c:	86 18       	sub	r8, r6
 84e:	fb 2d       	mov	r31, r11
 850:	ff 77       	andi	r31, 0x7F	; 127
 852:	3f 2e       	mov	r3, r31
 854:	36 fe       	sbrs	r3, 6
 856:	0d c0       	rjmp	.+26     	; 0x872 <vfprintf+0x2e4>
 858:	23 2d       	mov	r18, r3
 85a:	2e 7f       	andi	r18, 0xFE	; 254
 85c:	a2 2e       	mov	r10, r18
 85e:	89 14       	cp	r8, r9
 860:	58 f4       	brcc	.+22     	; 0x878 <vfprintf+0x2ea>
 862:	34 fe       	sbrs	r3, 4
 864:	0b c0       	rjmp	.+22     	; 0x87c <vfprintf+0x2ee>
 866:	32 fc       	sbrc	r3, 2
 868:	09 c0       	rjmp	.+18     	; 0x87c <vfprintf+0x2ee>
 86a:	83 2d       	mov	r24, r3
 86c:	8e 7e       	andi	r24, 0xEE	; 238
 86e:	a8 2e       	mov	r10, r24
 870:	05 c0       	rjmp	.+10     	; 0x87c <vfprintf+0x2ee>
 872:	b8 2c       	mov	r11, r8
 874:	a3 2c       	mov	r10, r3
 876:	03 c0       	rjmp	.+6      	; 0x87e <vfprintf+0x2f0>
 878:	b8 2c       	mov	r11, r8
 87a:	01 c0       	rjmp	.+2      	; 0x87e <vfprintf+0x2f0>
 87c:	b9 2c       	mov	r11, r9
 87e:	a4 fe       	sbrs	r10, 4
 880:	0f c0       	rjmp	.+30     	; 0x8a0 <vfprintf+0x312>
 882:	fe 01       	movw	r30, r28
 884:	e8 0d       	add	r30, r8
 886:	f1 1d       	adc	r31, r1
 888:	80 81       	ld	r24, Z
 88a:	80 33       	cpi	r24, 0x30	; 48
 88c:	21 f4       	brne	.+8      	; 0x896 <vfprintf+0x308>
 88e:	9a 2d       	mov	r25, r10
 890:	99 7e       	andi	r25, 0xE9	; 233
 892:	a9 2e       	mov	r10, r25
 894:	09 c0       	rjmp	.+18     	; 0x8a8 <vfprintf+0x31a>
 896:	a2 fe       	sbrs	r10, 2
 898:	06 c0       	rjmp	.+12     	; 0x8a6 <vfprintf+0x318>
 89a:	b3 94       	inc	r11
 89c:	b3 94       	inc	r11
 89e:	04 c0       	rjmp	.+8      	; 0x8a8 <vfprintf+0x31a>
 8a0:	8a 2d       	mov	r24, r10
 8a2:	86 78       	andi	r24, 0x86	; 134
 8a4:	09 f0       	breq	.+2      	; 0x8a8 <vfprintf+0x31a>
 8a6:	b3 94       	inc	r11
 8a8:	a3 fc       	sbrc	r10, 3
 8aa:	10 c0       	rjmp	.+32     	; 0x8cc <vfprintf+0x33e>
 8ac:	a0 fe       	sbrs	r10, 0
 8ae:	06 c0       	rjmp	.+12     	; 0x8bc <vfprintf+0x32e>
 8b0:	b2 14       	cp	r11, r2
 8b2:	80 f4       	brcc	.+32     	; 0x8d4 <vfprintf+0x346>
 8b4:	28 0c       	add	r2, r8
 8b6:	92 2c       	mov	r9, r2
 8b8:	9b 18       	sub	r9, r11
 8ba:	0d c0       	rjmp	.+26     	; 0x8d6 <vfprintf+0x348>
 8bc:	b2 14       	cp	r11, r2
 8be:	58 f4       	brcc	.+22     	; 0x8d6 <vfprintf+0x348>
 8c0:	b6 01       	movw	r22, r12
 8c2:	80 e2       	ldi	r24, 0x20	; 32
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	b8 d1       	rcall	.+880    	; 0xc38 <fputc>
 8c8:	b3 94       	inc	r11
 8ca:	f8 cf       	rjmp	.-16     	; 0x8bc <vfprintf+0x32e>
 8cc:	b2 14       	cp	r11, r2
 8ce:	18 f4       	brcc	.+6      	; 0x8d6 <vfprintf+0x348>
 8d0:	2b 18       	sub	r2, r11
 8d2:	02 c0       	rjmp	.+4      	; 0x8d8 <vfprintf+0x34a>
 8d4:	98 2c       	mov	r9, r8
 8d6:	21 2c       	mov	r2, r1
 8d8:	a4 fe       	sbrs	r10, 4
 8da:	0f c0       	rjmp	.+30     	; 0x8fa <vfprintf+0x36c>
 8dc:	b6 01       	movw	r22, r12
 8de:	80 e3       	ldi	r24, 0x30	; 48
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	aa d1       	rcall	.+852    	; 0xc38 <fputc>
 8e4:	a2 fe       	sbrs	r10, 2
 8e6:	16 c0       	rjmp	.+44     	; 0x914 <vfprintf+0x386>
 8e8:	a1 fc       	sbrc	r10, 1
 8ea:	03 c0       	rjmp	.+6      	; 0x8f2 <vfprintf+0x364>
 8ec:	88 e7       	ldi	r24, 0x78	; 120
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <vfprintf+0x368>
 8f2:	88 e5       	ldi	r24, 0x58	; 88
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	b6 01       	movw	r22, r12
 8f8:	0c c0       	rjmp	.+24     	; 0x912 <vfprintf+0x384>
 8fa:	8a 2d       	mov	r24, r10
 8fc:	86 78       	andi	r24, 0x86	; 134
 8fe:	51 f0       	breq	.+20     	; 0x914 <vfprintf+0x386>
 900:	a1 fe       	sbrs	r10, 1
 902:	02 c0       	rjmp	.+4      	; 0x908 <vfprintf+0x37a>
 904:	8b e2       	ldi	r24, 0x2B	; 43
 906:	01 c0       	rjmp	.+2      	; 0x90a <vfprintf+0x37c>
 908:	80 e2       	ldi	r24, 0x20	; 32
 90a:	a7 fc       	sbrc	r10, 7
 90c:	8d e2       	ldi	r24, 0x2D	; 45
 90e:	b6 01       	movw	r22, r12
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	92 d1       	rcall	.+804    	; 0xc38 <fputc>
 914:	89 14       	cp	r8, r9
 916:	30 f4       	brcc	.+12     	; 0x924 <vfprintf+0x396>
 918:	b6 01       	movw	r22, r12
 91a:	80 e3       	ldi	r24, 0x30	; 48
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	8c d1       	rcall	.+792    	; 0xc38 <fputc>
 920:	9a 94       	dec	r9
 922:	f8 cf       	rjmp	.-16     	; 0x914 <vfprintf+0x386>
 924:	8a 94       	dec	r8
 926:	f3 01       	movw	r30, r6
 928:	e8 0d       	add	r30, r8
 92a:	f1 1d       	adc	r31, r1
 92c:	80 81       	ld	r24, Z
 92e:	b6 01       	movw	r22, r12
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	82 d1       	rcall	.+772    	; 0xc38 <fputc>
 934:	81 10       	cpse	r8, r1
 936:	f6 cf       	rjmp	.-20     	; 0x924 <vfprintf+0x396>
 938:	22 20       	and	r2, r2
 93a:	09 f4       	brne	.+2      	; 0x93e <vfprintf+0x3b0>
 93c:	4e ce       	rjmp	.-868    	; 0x5da <vfprintf+0x4c>
 93e:	b6 01       	movw	r22, r12
 940:	80 e2       	ldi	r24, 0x20	; 32
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	79 d1       	rcall	.+754    	; 0xc38 <fputc>
 946:	2a 94       	dec	r2
 948:	f7 cf       	rjmp	.-18     	; 0x938 <vfprintf+0x3aa>
 94a:	f6 01       	movw	r30, r12
 94c:	86 81       	ldd	r24, Z+6	; 0x06
 94e:	97 81       	ldd	r25, Z+7	; 0x07
 950:	02 c0       	rjmp	.+4      	; 0x956 <vfprintf+0x3c8>
 952:	8f ef       	ldi	r24, 0xFF	; 255
 954:	9f ef       	ldi	r25, 0xFF	; 255
 956:	2b 96       	adiw	r28, 0x0b	; 11
 958:	0f b6       	in	r0, 0x3f	; 63
 95a:	f8 94       	cli
 95c:	de bf       	out	0x3e, r29	; 62
 95e:	0f be       	out	0x3f, r0	; 63
 960:	cd bf       	out	0x3d, r28	; 61
 962:	df 91       	pop	r29
 964:	cf 91       	pop	r28
 966:	1f 91       	pop	r17
 968:	0f 91       	pop	r16
 96a:	ff 90       	pop	r15
 96c:	ef 90       	pop	r14
 96e:	df 90       	pop	r13
 970:	cf 90       	pop	r12
 972:	bf 90       	pop	r11
 974:	af 90       	pop	r10
 976:	9f 90       	pop	r9
 978:	8f 90       	pop	r8
 97a:	7f 90       	pop	r7
 97c:	6f 90       	pop	r6
 97e:	5f 90       	pop	r5
 980:	4f 90       	pop	r4
 982:	3f 90       	pop	r3
 984:	2f 90       	pop	r2
 986:	08 95       	ret

00000988 <calloc>:
 988:	0f 93       	push	r16
 98a:	1f 93       	push	r17
 98c:	cf 93       	push	r28
 98e:	df 93       	push	r29
 990:	86 9f       	mul	r24, r22
 992:	80 01       	movw	r16, r0
 994:	87 9f       	mul	r24, r23
 996:	10 0d       	add	r17, r0
 998:	96 9f       	mul	r25, r22
 99a:	10 0d       	add	r17, r0
 99c:	11 24       	eor	r1, r1
 99e:	c8 01       	movw	r24, r16
 9a0:	0d d0       	rcall	.+26     	; 0x9bc <malloc>
 9a2:	ec 01       	movw	r28, r24
 9a4:	00 97       	sbiw	r24, 0x00	; 0
 9a6:	21 f0       	breq	.+8      	; 0x9b0 <calloc+0x28>
 9a8:	a8 01       	movw	r20, r16
 9aa:	60 e0       	ldi	r22, 0x00	; 0
 9ac:	70 e0       	ldi	r23, 0x00	; 0
 9ae:	32 d1       	rcall	.+612    	; 0xc14 <memset>
 9b0:	ce 01       	movw	r24, r28
 9b2:	df 91       	pop	r29
 9b4:	cf 91       	pop	r28
 9b6:	1f 91       	pop	r17
 9b8:	0f 91       	pop	r16
 9ba:	08 95       	ret

000009bc <malloc>:
 9bc:	0f 93       	push	r16
 9be:	1f 93       	push	r17
 9c0:	cf 93       	push	r28
 9c2:	df 93       	push	r29
 9c4:	82 30       	cpi	r24, 0x02	; 2
 9c6:	91 05       	cpc	r25, r1
 9c8:	10 f4       	brcc	.+4      	; 0x9ce <malloc+0x12>
 9ca:	82 e0       	ldi	r24, 0x02	; 2
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	e0 91 5f 03 	lds	r30, 0x035F	; 0x80035f <__flp>
 9d2:	f0 91 60 03 	lds	r31, 0x0360	; 0x800360 <__flp+0x1>
 9d6:	20 e0       	ldi	r18, 0x00	; 0
 9d8:	30 e0       	ldi	r19, 0x00	; 0
 9da:	a0 e0       	ldi	r26, 0x00	; 0
 9dc:	b0 e0       	ldi	r27, 0x00	; 0
 9de:	30 97       	sbiw	r30, 0x00	; 0
 9e0:	19 f1       	breq	.+70     	; 0xa28 <malloc+0x6c>
 9e2:	40 81       	ld	r20, Z
 9e4:	51 81       	ldd	r21, Z+1	; 0x01
 9e6:	02 81       	ldd	r16, Z+2	; 0x02
 9e8:	13 81       	ldd	r17, Z+3	; 0x03
 9ea:	48 17       	cp	r20, r24
 9ec:	59 07       	cpc	r21, r25
 9ee:	c8 f0       	brcs	.+50     	; 0xa22 <malloc+0x66>
 9f0:	84 17       	cp	r24, r20
 9f2:	95 07       	cpc	r25, r21
 9f4:	69 f4       	brne	.+26     	; 0xa10 <malloc+0x54>
 9f6:	10 97       	sbiw	r26, 0x00	; 0
 9f8:	31 f0       	breq	.+12     	; 0xa06 <malloc+0x4a>
 9fa:	12 96       	adiw	r26, 0x02	; 2
 9fc:	0c 93       	st	X, r16
 9fe:	12 97       	sbiw	r26, 0x02	; 2
 a00:	13 96       	adiw	r26, 0x03	; 3
 a02:	1c 93       	st	X, r17
 a04:	27 c0       	rjmp	.+78     	; 0xa54 <malloc+0x98>
 a06:	00 93 5f 03 	sts	0x035F, r16	; 0x80035f <__flp>
 a0a:	10 93 60 03 	sts	0x0360, r17	; 0x800360 <__flp+0x1>
 a0e:	22 c0       	rjmp	.+68     	; 0xa54 <malloc+0x98>
 a10:	21 15       	cp	r18, r1
 a12:	31 05       	cpc	r19, r1
 a14:	19 f0       	breq	.+6      	; 0xa1c <malloc+0x60>
 a16:	42 17       	cp	r20, r18
 a18:	53 07       	cpc	r21, r19
 a1a:	18 f4       	brcc	.+6      	; 0xa22 <malloc+0x66>
 a1c:	9a 01       	movw	r18, r20
 a1e:	bd 01       	movw	r22, r26
 a20:	ef 01       	movw	r28, r30
 a22:	df 01       	movw	r26, r30
 a24:	f8 01       	movw	r30, r16
 a26:	db cf       	rjmp	.-74     	; 0x9de <malloc+0x22>
 a28:	21 15       	cp	r18, r1
 a2a:	31 05       	cpc	r19, r1
 a2c:	f9 f0       	breq	.+62     	; 0xa6c <malloc+0xb0>
 a2e:	28 1b       	sub	r18, r24
 a30:	39 0b       	sbc	r19, r25
 a32:	24 30       	cpi	r18, 0x04	; 4
 a34:	31 05       	cpc	r19, r1
 a36:	80 f4       	brcc	.+32     	; 0xa58 <malloc+0x9c>
 a38:	8a 81       	ldd	r24, Y+2	; 0x02
 a3a:	9b 81       	ldd	r25, Y+3	; 0x03
 a3c:	61 15       	cp	r22, r1
 a3e:	71 05       	cpc	r23, r1
 a40:	21 f0       	breq	.+8      	; 0xa4a <malloc+0x8e>
 a42:	fb 01       	movw	r30, r22
 a44:	93 83       	std	Z+3, r25	; 0x03
 a46:	82 83       	std	Z+2, r24	; 0x02
 a48:	04 c0       	rjmp	.+8      	; 0xa52 <malloc+0x96>
 a4a:	90 93 60 03 	sts	0x0360, r25	; 0x800360 <__flp+0x1>
 a4e:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <__flp>
 a52:	fe 01       	movw	r30, r28
 a54:	32 96       	adiw	r30, 0x02	; 2
 a56:	44 c0       	rjmp	.+136    	; 0xae0 <malloc+0x124>
 a58:	fe 01       	movw	r30, r28
 a5a:	e2 0f       	add	r30, r18
 a5c:	f3 1f       	adc	r31, r19
 a5e:	81 93       	st	Z+, r24
 a60:	91 93       	st	Z+, r25
 a62:	22 50       	subi	r18, 0x02	; 2
 a64:	31 09       	sbc	r19, r1
 a66:	39 83       	std	Y+1, r19	; 0x01
 a68:	28 83       	st	Y, r18
 a6a:	3a c0       	rjmp	.+116    	; 0xae0 <malloc+0x124>
 a6c:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <__brkval>
 a70:	30 91 5e 03 	lds	r19, 0x035E	; 0x80035e <__brkval+0x1>
 a74:	23 2b       	or	r18, r19
 a76:	41 f4       	brne	.+16     	; 0xa88 <malloc+0xcc>
 a78:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 a7c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 a80:	30 93 5e 03 	sts	0x035E, r19	; 0x80035e <__brkval+0x1>
 a84:	20 93 5d 03 	sts	0x035D, r18	; 0x80035d <__brkval>
 a88:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 a8c:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 a90:	21 15       	cp	r18, r1
 a92:	31 05       	cpc	r19, r1
 a94:	41 f4       	brne	.+16     	; 0xaa6 <malloc+0xea>
 a96:	2d b7       	in	r18, 0x3d	; 61
 a98:	3e b7       	in	r19, 0x3e	; 62
 a9a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 a9e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 aa2:	24 1b       	sub	r18, r20
 aa4:	35 0b       	sbc	r19, r21
 aa6:	e0 91 5d 03 	lds	r30, 0x035D	; 0x80035d <__brkval>
 aaa:	f0 91 5e 03 	lds	r31, 0x035E	; 0x80035e <__brkval+0x1>
 aae:	e2 17       	cp	r30, r18
 ab0:	f3 07       	cpc	r31, r19
 ab2:	a0 f4       	brcc	.+40     	; 0xadc <malloc+0x120>
 ab4:	2e 1b       	sub	r18, r30
 ab6:	3f 0b       	sbc	r19, r31
 ab8:	28 17       	cp	r18, r24
 aba:	39 07       	cpc	r19, r25
 abc:	78 f0       	brcs	.+30     	; 0xadc <malloc+0x120>
 abe:	ac 01       	movw	r20, r24
 ac0:	4e 5f       	subi	r20, 0xFE	; 254
 ac2:	5f 4f       	sbci	r21, 0xFF	; 255
 ac4:	24 17       	cp	r18, r20
 ac6:	35 07       	cpc	r19, r21
 ac8:	48 f0       	brcs	.+18     	; 0xadc <malloc+0x120>
 aca:	4e 0f       	add	r20, r30
 acc:	5f 1f       	adc	r21, r31
 ace:	50 93 5e 03 	sts	0x035E, r21	; 0x80035e <__brkval+0x1>
 ad2:	40 93 5d 03 	sts	0x035D, r20	; 0x80035d <__brkval>
 ad6:	81 93       	st	Z+, r24
 ad8:	91 93       	st	Z+, r25
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <malloc+0x124>
 adc:	e0 e0       	ldi	r30, 0x00	; 0
 ade:	f0 e0       	ldi	r31, 0x00	; 0
 ae0:	cf 01       	movw	r24, r30
 ae2:	df 91       	pop	r29
 ae4:	cf 91       	pop	r28
 ae6:	1f 91       	pop	r17
 ae8:	0f 91       	pop	r16
 aea:	08 95       	ret

00000aec <free>:
 aec:	cf 93       	push	r28
 aee:	df 93       	push	r29
 af0:	00 97       	sbiw	r24, 0x00	; 0
 af2:	09 f4       	brne	.+2      	; 0xaf6 <free+0xa>
 af4:	81 c0       	rjmp	.+258    	; 0xbf8 <free+0x10c>
 af6:	fc 01       	movw	r30, r24
 af8:	32 97       	sbiw	r30, 0x02	; 2
 afa:	13 82       	std	Z+3, r1	; 0x03
 afc:	12 82       	std	Z+2, r1	; 0x02
 afe:	a0 91 5f 03 	lds	r26, 0x035F	; 0x80035f <__flp>
 b02:	b0 91 60 03 	lds	r27, 0x0360	; 0x800360 <__flp+0x1>
 b06:	10 97       	sbiw	r26, 0x00	; 0
 b08:	81 f4       	brne	.+32     	; 0xb2a <free+0x3e>
 b0a:	20 81       	ld	r18, Z
 b0c:	31 81       	ldd	r19, Z+1	; 0x01
 b0e:	82 0f       	add	r24, r18
 b10:	93 1f       	adc	r25, r19
 b12:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <__brkval>
 b16:	30 91 5e 03 	lds	r19, 0x035E	; 0x80035e <__brkval+0x1>
 b1a:	28 17       	cp	r18, r24
 b1c:	39 07       	cpc	r19, r25
 b1e:	51 f5       	brne	.+84     	; 0xb74 <free+0x88>
 b20:	f0 93 5e 03 	sts	0x035E, r31	; 0x80035e <__brkval+0x1>
 b24:	e0 93 5d 03 	sts	0x035D, r30	; 0x80035d <__brkval>
 b28:	67 c0       	rjmp	.+206    	; 0xbf8 <free+0x10c>
 b2a:	ed 01       	movw	r28, r26
 b2c:	20 e0       	ldi	r18, 0x00	; 0
 b2e:	30 e0       	ldi	r19, 0x00	; 0
 b30:	ce 17       	cp	r28, r30
 b32:	df 07       	cpc	r29, r31
 b34:	40 f4       	brcc	.+16     	; 0xb46 <free+0x5a>
 b36:	4a 81       	ldd	r20, Y+2	; 0x02
 b38:	5b 81       	ldd	r21, Y+3	; 0x03
 b3a:	9e 01       	movw	r18, r28
 b3c:	41 15       	cp	r20, r1
 b3e:	51 05       	cpc	r21, r1
 b40:	f1 f0       	breq	.+60     	; 0xb7e <free+0x92>
 b42:	ea 01       	movw	r28, r20
 b44:	f5 cf       	rjmp	.-22     	; 0xb30 <free+0x44>
 b46:	d3 83       	std	Z+3, r29	; 0x03
 b48:	c2 83       	std	Z+2, r28	; 0x02
 b4a:	40 81       	ld	r20, Z
 b4c:	51 81       	ldd	r21, Z+1	; 0x01
 b4e:	84 0f       	add	r24, r20
 b50:	95 1f       	adc	r25, r21
 b52:	c8 17       	cp	r28, r24
 b54:	d9 07       	cpc	r29, r25
 b56:	59 f4       	brne	.+22     	; 0xb6e <free+0x82>
 b58:	88 81       	ld	r24, Y
 b5a:	99 81       	ldd	r25, Y+1	; 0x01
 b5c:	84 0f       	add	r24, r20
 b5e:	95 1f       	adc	r25, r21
 b60:	02 96       	adiw	r24, 0x02	; 2
 b62:	91 83       	std	Z+1, r25	; 0x01
 b64:	80 83       	st	Z, r24
 b66:	8a 81       	ldd	r24, Y+2	; 0x02
 b68:	9b 81       	ldd	r25, Y+3	; 0x03
 b6a:	93 83       	std	Z+3, r25	; 0x03
 b6c:	82 83       	std	Z+2, r24	; 0x02
 b6e:	21 15       	cp	r18, r1
 b70:	31 05       	cpc	r19, r1
 b72:	29 f4       	brne	.+10     	; 0xb7e <free+0x92>
 b74:	f0 93 60 03 	sts	0x0360, r31	; 0x800360 <__flp+0x1>
 b78:	e0 93 5f 03 	sts	0x035F, r30	; 0x80035f <__flp>
 b7c:	3d c0       	rjmp	.+122    	; 0xbf8 <free+0x10c>
 b7e:	e9 01       	movw	r28, r18
 b80:	fb 83       	std	Y+3, r31	; 0x03
 b82:	ea 83       	std	Y+2, r30	; 0x02
 b84:	49 91       	ld	r20, Y+
 b86:	59 91       	ld	r21, Y+
 b88:	c4 0f       	add	r28, r20
 b8a:	d5 1f       	adc	r29, r21
 b8c:	ec 17       	cp	r30, r28
 b8e:	fd 07       	cpc	r31, r29
 b90:	61 f4       	brne	.+24     	; 0xbaa <free+0xbe>
 b92:	80 81       	ld	r24, Z
 b94:	91 81       	ldd	r25, Z+1	; 0x01
 b96:	84 0f       	add	r24, r20
 b98:	95 1f       	adc	r25, r21
 b9a:	02 96       	adiw	r24, 0x02	; 2
 b9c:	e9 01       	movw	r28, r18
 b9e:	99 83       	std	Y+1, r25	; 0x01
 ba0:	88 83       	st	Y, r24
 ba2:	82 81       	ldd	r24, Z+2	; 0x02
 ba4:	93 81       	ldd	r25, Z+3	; 0x03
 ba6:	9b 83       	std	Y+3, r25	; 0x03
 ba8:	8a 83       	std	Y+2, r24	; 0x02
 baa:	e0 e0       	ldi	r30, 0x00	; 0
 bac:	f0 e0       	ldi	r31, 0x00	; 0
 bae:	12 96       	adiw	r26, 0x02	; 2
 bb0:	8d 91       	ld	r24, X+
 bb2:	9c 91       	ld	r25, X
 bb4:	13 97       	sbiw	r26, 0x03	; 3
 bb6:	00 97       	sbiw	r24, 0x00	; 0
 bb8:	19 f0       	breq	.+6      	; 0xbc0 <free+0xd4>
 bba:	fd 01       	movw	r30, r26
 bbc:	dc 01       	movw	r26, r24
 bbe:	f7 cf       	rjmp	.-18     	; 0xbae <free+0xc2>
 bc0:	8d 91       	ld	r24, X+
 bc2:	9c 91       	ld	r25, X
 bc4:	11 97       	sbiw	r26, 0x01	; 1
 bc6:	9d 01       	movw	r18, r26
 bc8:	2e 5f       	subi	r18, 0xFE	; 254
 bca:	3f 4f       	sbci	r19, 0xFF	; 255
 bcc:	82 0f       	add	r24, r18
 bce:	93 1f       	adc	r25, r19
 bd0:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <__brkval>
 bd4:	30 91 5e 03 	lds	r19, 0x035E	; 0x80035e <__brkval+0x1>
 bd8:	28 17       	cp	r18, r24
 bda:	39 07       	cpc	r19, r25
 bdc:	69 f4       	brne	.+26     	; 0xbf8 <free+0x10c>
 bde:	30 97       	sbiw	r30, 0x00	; 0
 be0:	29 f4       	brne	.+10     	; 0xbec <free+0x100>
 be2:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <__flp+0x1>
 be6:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <__flp>
 bea:	02 c0       	rjmp	.+4      	; 0xbf0 <free+0x104>
 bec:	13 82       	std	Z+3, r1	; 0x03
 bee:	12 82       	std	Z+2, r1	; 0x02
 bf0:	b0 93 5e 03 	sts	0x035E, r27	; 0x80035e <__brkval+0x1>
 bf4:	a0 93 5d 03 	sts	0x035D, r26	; 0x80035d <__brkval>
 bf8:	df 91       	pop	r29
 bfa:	cf 91       	pop	r28
 bfc:	08 95       	ret

00000bfe <strnlen_P>:
 bfe:	fc 01       	movw	r30, r24
 c00:	05 90       	lpm	r0, Z+
 c02:	61 50       	subi	r22, 0x01	; 1
 c04:	70 40       	sbci	r23, 0x00	; 0
 c06:	01 10       	cpse	r0, r1
 c08:	d8 f7       	brcc	.-10     	; 0xc00 <strnlen_P+0x2>
 c0a:	80 95       	com	r24
 c0c:	90 95       	com	r25
 c0e:	8e 0f       	add	r24, r30
 c10:	9f 1f       	adc	r25, r31
 c12:	08 95       	ret

00000c14 <memset>:
 c14:	dc 01       	movw	r26, r24
 c16:	01 c0       	rjmp	.+2      	; 0xc1a <memset+0x6>
 c18:	6d 93       	st	X+, r22
 c1a:	41 50       	subi	r20, 0x01	; 1
 c1c:	50 40       	sbci	r21, 0x00	; 0
 c1e:	e0 f7       	brcc	.-8      	; 0xc18 <memset+0x4>
 c20:	08 95       	ret

00000c22 <strnlen>:
 c22:	fc 01       	movw	r30, r24
 c24:	61 50       	subi	r22, 0x01	; 1
 c26:	70 40       	sbci	r23, 0x00	; 0
 c28:	01 90       	ld	r0, Z+
 c2a:	01 10       	cpse	r0, r1
 c2c:	d8 f7       	brcc	.-10     	; 0xc24 <strnlen+0x2>
 c2e:	80 95       	com	r24
 c30:	90 95       	com	r25
 c32:	8e 0f       	add	r24, r30
 c34:	9f 1f       	adc	r25, r31
 c36:	08 95       	ret

00000c38 <fputc>:
 c38:	0f 93       	push	r16
 c3a:	1f 93       	push	r17
 c3c:	cf 93       	push	r28
 c3e:	df 93       	push	r29
 c40:	fb 01       	movw	r30, r22
 c42:	23 81       	ldd	r18, Z+3	; 0x03
 c44:	21 fd       	sbrc	r18, 1
 c46:	03 c0       	rjmp	.+6      	; 0xc4e <fputc+0x16>
 c48:	8f ef       	ldi	r24, 0xFF	; 255
 c4a:	9f ef       	ldi	r25, 0xFF	; 255
 c4c:	2c c0       	rjmp	.+88     	; 0xca6 <fputc+0x6e>
 c4e:	22 ff       	sbrs	r18, 2
 c50:	16 c0       	rjmp	.+44     	; 0xc7e <fputc+0x46>
 c52:	46 81       	ldd	r20, Z+6	; 0x06
 c54:	57 81       	ldd	r21, Z+7	; 0x07
 c56:	24 81       	ldd	r18, Z+4	; 0x04
 c58:	35 81       	ldd	r19, Z+5	; 0x05
 c5a:	42 17       	cp	r20, r18
 c5c:	53 07       	cpc	r21, r19
 c5e:	44 f4       	brge	.+16     	; 0xc70 <fputc+0x38>
 c60:	a0 81       	ld	r26, Z
 c62:	b1 81       	ldd	r27, Z+1	; 0x01
 c64:	9d 01       	movw	r18, r26
 c66:	2f 5f       	subi	r18, 0xFF	; 255
 c68:	3f 4f       	sbci	r19, 0xFF	; 255
 c6a:	31 83       	std	Z+1, r19	; 0x01
 c6c:	20 83       	st	Z, r18
 c6e:	8c 93       	st	X, r24
 c70:	26 81       	ldd	r18, Z+6	; 0x06
 c72:	37 81       	ldd	r19, Z+7	; 0x07
 c74:	2f 5f       	subi	r18, 0xFF	; 255
 c76:	3f 4f       	sbci	r19, 0xFF	; 255
 c78:	37 83       	std	Z+7, r19	; 0x07
 c7a:	26 83       	std	Z+6, r18	; 0x06
 c7c:	14 c0       	rjmp	.+40     	; 0xca6 <fputc+0x6e>
 c7e:	8b 01       	movw	r16, r22
 c80:	ec 01       	movw	r28, r24
 c82:	fb 01       	movw	r30, r22
 c84:	00 84       	ldd	r0, Z+8	; 0x08
 c86:	f1 85       	ldd	r31, Z+9	; 0x09
 c88:	e0 2d       	mov	r30, r0
 c8a:	19 95       	eicall
 c8c:	89 2b       	or	r24, r25
 c8e:	e1 f6       	brne	.-72     	; 0xc48 <fputc+0x10>
 c90:	d8 01       	movw	r26, r16
 c92:	16 96       	adiw	r26, 0x06	; 6
 c94:	8d 91       	ld	r24, X+
 c96:	9c 91       	ld	r25, X
 c98:	17 97       	sbiw	r26, 0x07	; 7
 c9a:	01 96       	adiw	r24, 0x01	; 1
 c9c:	17 96       	adiw	r26, 0x07	; 7
 c9e:	9c 93       	st	X, r25
 ca0:	8e 93       	st	-X, r24
 ca2:	16 97       	sbiw	r26, 0x06	; 6
 ca4:	ce 01       	movw	r24, r28
 ca6:	df 91       	pop	r29
 ca8:	cf 91       	pop	r28
 caa:	1f 91       	pop	r17
 cac:	0f 91       	pop	r16
 cae:	08 95       	ret

00000cb0 <__ultoa_invert>:
 cb0:	fa 01       	movw	r30, r20
 cb2:	aa 27       	eor	r26, r26
 cb4:	28 30       	cpi	r18, 0x08	; 8
 cb6:	51 f1       	breq	.+84     	; 0xd0c <__ultoa_invert+0x5c>
 cb8:	20 31       	cpi	r18, 0x10	; 16
 cba:	81 f1       	breq	.+96     	; 0xd1c <__ultoa_invert+0x6c>
 cbc:	e8 94       	clt
 cbe:	6f 93       	push	r22
 cc0:	6e 7f       	andi	r22, 0xFE	; 254
 cc2:	6e 5f       	subi	r22, 0xFE	; 254
 cc4:	7f 4f       	sbci	r23, 0xFF	; 255
 cc6:	8f 4f       	sbci	r24, 0xFF	; 255
 cc8:	9f 4f       	sbci	r25, 0xFF	; 255
 cca:	af 4f       	sbci	r26, 0xFF	; 255
 ccc:	b1 e0       	ldi	r27, 0x01	; 1
 cce:	3e d0       	rcall	.+124    	; 0xd4c <__ultoa_invert+0x9c>
 cd0:	b4 e0       	ldi	r27, 0x04	; 4
 cd2:	3c d0       	rcall	.+120    	; 0xd4c <__ultoa_invert+0x9c>
 cd4:	67 0f       	add	r22, r23
 cd6:	78 1f       	adc	r23, r24
 cd8:	89 1f       	adc	r24, r25
 cda:	9a 1f       	adc	r25, r26
 cdc:	a1 1d       	adc	r26, r1
 cde:	68 0f       	add	r22, r24
 ce0:	79 1f       	adc	r23, r25
 ce2:	8a 1f       	adc	r24, r26
 ce4:	91 1d       	adc	r25, r1
 ce6:	a1 1d       	adc	r26, r1
 ce8:	6a 0f       	add	r22, r26
 cea:	71 1d       	adc	r23, r1
 cec:	81 1d       	adc	r24, r1
 cee:	91 1d       	adc	r25, r1
 cf0:	a1 1d       	adc	r26, r1
 cf2:	20 d0       	rcall	.+64     	; 0xd34 <__ultoa_invert+0x84>
 cf4:	09 f4       	brne	.+2      	; 0xcf8 <__ultoa_invert+0x48>
 cf6:	68 94       	set
 cf8:	3f 91       	pop	r19
 cfa:	2a e0       	ldi	r18, 0x0A	; 10
 cfc:	26 9f       	mul	r18, r22
 cfe:	11 24       	eor	r1, r1
 d00:	30 19       	sub	r19, r0
 d02:	30 5d       	subi	r19, 0xD0	; 208
 d04:	31 93       	st	Z+, r19
 d06:	de f6       	brtc	.-74     	; 0xcbe <__ultoa_invert+0xe>
 d08:	cf 01       	movw	r24, r30
 d0a:	08 95       	ret
 d0c:	46 2f       	mov	r20, r22
 d0e:	47 70       	andi	r20, 0x07	; 7
 d10:	40 5d       	subi	r20, 0xD0	; 208
 d12:	41 93       	st	Z+, r20
 d14:	b3 e0       	ldi	r27, 0x03	; 3
 d16:	0f d0       	rcall	.+30     	; 0xd36 <__ultoa_invert+0x86>
 d18:	c9 f7       	brne	.-14     	; 0xd0c <__ultoa_invert+0x5c>
 d1a:	f6 cf       	rjmp	.-20     	; 0xd08 <__ultoa_invert+0x58>
 d1c:	46 2f       	mov	r20, r22
 d1e:	4f 70       	andi	r20, 0x0F	; 15
 d20:	40 5d       	subi	r20, 0xD0	; 208
 d22:	4a 33       	cpi	r20, 0x3A	; 58
 d24:	18 f0       	brcs	.+6      	; 0xd2c <__ultoa_invert+0x7c>
 d26:	49 5d       	subi	r20, 0xD9	; 217
 d28:	31 fd       	sbrc	r19, 1
 d2a:	40 52       	subi	r20, 0x20	; 32
 d2c:	41 93       	st	Z+, r20
 d2e:	02 d0       	rcall	.+4      	; 0xd34 <__ultoa_invert+0x84>
 d30:	a9 f7       	brne	.-22     	; 0xd1c <__ultoa_invert+0x6c>
 d32:	ea cf       	rjmp	.-44     	; 0xd08 <__ultoa_invert+0x58>
 d34:	b4 e0       	ldi	r27, 0x04	; 4
 d36:	a6 95       	lsr	r26
 d38:	97 95       	ror	r25
 d3a:	87 95       	ror	r24
 d3c:	77 95       	ror	r23
 d3e:	67 95       	ror	r22
 d40:	ba 95       	dec	r27
 d42:	c9 f7       	brne	.-14     	; 0xd36 <__ultoa_invert+0x86>
 d44:	00 97       	sbiw	r24, 0x00	; 0
 d46:	61 05       	cpc	r22, r1
 d48:	71 05       	cpc	r23, r1
 d4a:	08 95       	ret
 d4c:	9b 01       	movw	r18, r22
 d4e:	ac 01       	movw	r20, r24
 d50:	0a 2e       	mov	r0, r26
 d52:	06 94       	lsr	r0
 d54:	57 95       	ror	r21
 d56:	47 95       	ror	r20
 d58:	37 95       	ror	r19
 d5a:	27 95       	ror	r18
 d5c:	ba 95       	dec	r27
 d5e:	c9 f7       	brne	.-14     	; 0xd52 <__ultoa_invert+0xa2>
 d60:	62 0f       	add	r22, r18
 d62:	73 1f       	adc	r23, r19
 d64:	84 1f       	adc	r24, r20
 d66:	95 1f       	adc	r25, r21
 d68:	a0 1d       	adc	r26, r0
 d6a:	08 95       	ret

00000d6c <_exit>:
 d6c:	f8 94       	cli

00000d6e <__stop_program>:
 d6e:	ff cf       	rjmp	.-2      	; 0xd6e <__stop_program>
