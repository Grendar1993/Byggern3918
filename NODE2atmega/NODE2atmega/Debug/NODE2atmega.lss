
NODE2atmega.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014c  00800200  00000d74  00000e08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d74  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  0080034c  0080034c  00000f54  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f54  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e1d  00000000  00000000  00001160  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013ed  00000000  00000000  00002f7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ce9  00000000  00000000  0000436a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000384  00000000  00000000  00005054  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d3  00000000  00000000  000053d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000940  00000000  00000000  00005bab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000064eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	f0 c0       	rjmp	.+480    	; 0x1ee <__vector_3>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e7       	ldi	r30, 0x74	; 116
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 34       	cpi	r26, 0x4C	; 76
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	ac e4       	ldi	r26, 0x4C	; 76
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a1 36       	cpi	r26, 0x61	; 97
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	ac d0       	rcall	.+344    	; 0x278 <main>
 120:	27 c6       	rjmp	.+3150   	; 0xd70 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <ADC_init>:
#include "adc.h"

void ADC_init( void )
{
	// Enable ADC and set prescaler to 128
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
 124:	ea e7       	ldi	r30, 0x7A	; 122
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	87 68       	ori	r24, 0x87	; 135
 12c:	80 83       	st	Z, r24
 12e:	08 95       	ret

00000130 <ADC_read>:
}

uint8_t ADC_read( void )
{
	// Reference selection: AVCC w/ external capacitor at AREF. Left adjust result
	ADMUX |= (1 << REFS0) | (1 << ADLAR);
 130:	ec e7       	ldi	r30, 0x7C	; 124
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	80 66       	ori	r24, 0x60	; 96
 138:	80 83       	st	Z, r24
	
	// Start conversion
	ADCSRA |= (1 << ADSC);
 13a:	ea e7       	ldi	r30, 0x7A	; 122
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	80 64       	ori	r24, 0x40	; 64
 142:	80 83       	st	Z, r24
	
	// Wait until conversion is complete
	while(ADCSRA & (1 << ADSC));
 144:	80 81       	ld	r24, Z
 146:	86 fd       	sbrc	r24, 6
 148:	fd cf       	rjmp	.-6      	; 0x144 <ADC_read+0x14>
	
	// Read converted data
	return ADCH;
 14a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
 14e:	08 95       	ret

00000150 <CAN_init>:
		//Message not received
		//message.id = -1;
	//}
	
	return message;
}
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	16 d1       	rcall	.+556    	; 0x382 <MCP_init>
 156:	48 e6       	ldi	r20, 0x68	; 104
 158:	60 e6       	ldi	r22, 0x60	; 96
 15a:	80 e6       	ldi	r24, 0x60	; 96
 15c:	2b d1       	rcall	.+598    	; 0x3b4 <MCP_bit_modify>
 15e:	41 e0       	ldi	r20, 0x01	; 1
 160:	63 e0       	ldi	r22, 0x03	; 3
 162:	8b e2       	ldi	r24, 0x2B	; 43
 164:	27 d1       	rcall	.+590    	; 0x3b4 <MCP_bit_modify>
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	60 ee       	ldi	r22, 0xE0	; 224
 16a:	8f e0       	ldi	r24, 0x0F	; 15
 16c:	23 d1       	rcall	.+582    	; 0x3b4 <MCP_bit_modify>
 16e:	8e e0       	ldi	r24, 0x0E	; 14
 170:	f6 d0       	rcall	.+492    	; 0x35e <MCP_read>
 172:	1f 92       	push	r1
 174:	8f 93       	push	r24
 176:	c6 e0       	ldi	r28, 0x06	; 6
 178:	d2 e0       	ldi	r29, 0x02	; 2
 17a:	df 93       	push	r29
 17c:	cf 93       	push	r28
 17e:	cd d1       	rcall	.+922    	; 0x51a <printf>
 180:	8c e2       	ldi	r24, 0x2C	; 44
 182:	ed d0       	rcall	.+474    	; 0x35e <MCP_read>
 184:	1f 92       	push	r1
 186:	8f 93       	push	r24
 188:	df 93       	push	r29
 18a:	cf 93       	push	r28
 18c:	c6 d1       	rcall	.+908    	; 0x51a <printf>
 18e:	8d e2       	ldi	r24, 0x2D	; 45
 190:	e6 d0       	rcall	.+460    	; 0x35e <MCP_read>
 192:	1f 92       	push	r1
 194:	8f 93       	push	r24
 196:	8b e1       	ldi	r24, 0x1B	; 27
 198:	92 e0       	ldi	r25, 0x02	; 2
 19a:	9f 93       	push	r25
 19c:	8f 93       	push	r24
 19e:	bd d1       	rcall	.+890    	; 0x51a <printf>
 1a0:	8e e0       	ldi	r24, 0x0E	; 14
 1a2:	dd d0       	rcall	.+442    	; 0x35e <MCP_read>
 1a4:	80 7e       	andi	r24, 0xE0	; 224
 1a6:	2d b7       	in	r18, 0x3d	; 61
 1a8:	3e b7       	in	r19, 0x3e	; 62
 1aa:	24 5f       	subi	r18, 0xF4	; 244
 1ac:	3f 4f       	sbci	r19, 0xFF	; 255
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	3e bf       	out	0x3e, r19	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	2d bf       	out	0x3d, r18	; 61
 1b8:	88 23       	and	r24, r24
 1ba:	51 f0       	breq	.+20     	; 0x1d0 <CAN_init+0x80>
 1bc:	83 e3       	ldi	r24, 0x33	; 51
 1be:	92 e0       	ldi	r25, 0x02	; 2
 1c0:	9f 93       	push	r25
 1c2:	8f 93       	push	r24
 1c4:	aa d1       	rcall	.+852    	; 0x51a <printf>
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <CAN_init+0x84>
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <CAN_int_vect>:
 1da:	40 e0       	ldi	r20, 0x00	; 0
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	8c e2       	ldi	r24, 0x2C	; 44
 1e0:	e9 d0       	rcall	.+466    	; 0x3b4 <MCP_bit_modify>
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <__data_end>
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	08 95       	ret

000001ee <__vector_3>:

//Interrupt service routine for CAN bus
ISR(INT2_vect) {
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	0b b6       	in	r0, 0x3b	; 59
 1fa:	0f 92       	push	r0
 1fc:	2f 93       	push	r18
 1fe:	3f 93       	push	r19
 200:	4f 93       	push	r20
 202:	5f 93       	push	r21
 204:	6f 93       	push	r22
 206:	7f 93       	push	r23
 208:	8f 93       	push	r24
 20a:	9f 93       	push	r25
 20c:	af 93       	push	r26
 20e:	bf 93       	push	r27
 210:	ef 93       	push	r30
 212:	ff 93       	push	r31
//	_delay_ms(10);
	CAN_int_vect();
 214:	e2 df       	rcall	.-60     	; 0x1da <CAN_int_vect>
   printf("INTERRUPT\r\n");
 216:	8d e7       	ldi	r24, 0x7D	; 125
 218:	92 e0       	ldi	r25, 0x02	; 2
 21a:	92 d1       	rcall	.+804    	; 0x540 <puts>
// 	else if (interrupt & MCP_RX1IF){
// 		rx_flag = 1;
// 		// clear CANINTF.RX1IF
// 		MCP_bit_modify(MCP_CANINTF, 0x02, 0x00);
// 	}
}
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	bf 91       	pop	r27
 222:	af 91       	pop	r26
 224:	9f 91       	pop	r25
 226:	8f 91       	pop	r24
 228:	7f 91       	pop	r23
 22a:	6f 91       	pop	r22
 22c:	5f 91       	pop	r21
 22e:	4f 91       	pop	r20
 230:	3f 91       	pop	r19
 232:	2f 91       	pop	r18
 234:	0f 90       	pop	r0
 236:	0b be       	out	0x3b, r0	; 59
 238:	0f 90       	pop	r0
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	0f 90       	pop	r0
 23e:	1f 90       	pop	r1
 240:	18 95       	reti

00000242 <IR_read>:
uint8_t IR_read( void )
{
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
 242:	76 df       	rcall	.-276    	; 0x130 <ADC_read>
 244:	ed e4       	ldi	r30, 0x4D	; 77
 246:	f3 e0       	ldi	r31, 0x03	; 3
 248:	80 83       	st	Z, r24
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 24a:	93 81       	ldd	r25, Z+3	; 0x03
		if (i != 0){
			values[i] = values[i - 1];
 24c:	22 81       	ldd	r18, Z+2	; 0x02
 24e:	23 83       	std	Z+3, r18	; 0x03
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 250:	30 e0       	ldi	r19, 0x00	; 0
 252:	29 0f       	add	r18, r25
 254:	31 1d       	adc	r19, r1
		if (i != 0){
			values[i] = values[i - 1];
 256:	91 81       	ldd	r25, Z+1	; 0x01
 258:	92 83       	std	Z+2, r25	; 0x02
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 25a:	29 0f       	add	r18, r25
 25c:	31 1d       	adc	r19, r1
		if (i != 0){
			values[i] = values[i - 1];
 25e:	81 83       	std	Z+1, r24	; 0x01
	static uint8_t values[4];
	int avg = 0;
	
	values[0] = ADC_read();
	for (int i = 3; i >= 0; i--){
		avg = avg + values[i];
 260:	a9 01       	movw	r20, r18
 262:	48 0f       	add	r20, r24
 264:	51 1d       	adc	r21, r1
 266:	ca 01       	movw	r24, r20
		if (i != 0){
			values[i] = values[i - 1];
		}
	}
	avg = avg / 4;
 268:	99 23       	and	r25, r25
 26a:	0c f4       	brge	.+2      	; 0x26e <IR_read+0x2c>
 26c:	03 96       	adiw	r24, 0x03	; 3
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	95 95       	asr	r25
 274:	87 95       	ror	r24
	return avg;
 276:	08 95       	ret

00000278 <main>:
	int prev_ir_val = 0;
	

    int main(void){
		
		cli();
 278:	f8 94       	cli
		
		DDRF &= ~(1 << PINF0); //Set F0(ADC0) as input
 27a:	80 98       	cbi	0x10, 0	; 16
		
		EICRA |= (0 << ISC21) | (0 << ISC20);
 27c:	e9 e6       	ldi	r30, 0x69	; 105
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	80 83       	st	Z, r24
		// Enable external interrupts of INT2
		EIMSK |= (1 << INT2);
 284:	ea 9a       	sbi	0x1d, 2	; 29
		
		DDRD &= ~(1 << PIND2);		//Set D2(INT2) as input
 286:	52 98       	cbi	0x0a, 2	; 10
		//int variabel = 1;
		
		can_msg can_msg_send;
		volatile can_msg can_msg_receive;
		
		UART_Init(UBRREG);
 288:	87 e6       	ldi	r24, 0x67	; 103
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	e9 d0       	rcall	.+466    	; 0x460 <UART_Init>
 		SPI_init();
 28e:	aa d0       	rcall	.+340    	; 0x3e4 <SPI_init>
 		MCP_init();
 290:	78 d0       	rcall	.+240    	; 0x382 <MCP_init>

		if (CAN_init() == 0) {
 292:	5e df       	rcall	.-324    	; 0x150 <CAN_init>
 294:	89 2b       	or	r24, r25
 296:	41 f4       	brne	.+16     	; 0x2a8 <main+0x30>
			printf("CAN BE WORKING\n\r");
 298:	88 e8       	ldi	r24, 0x88	; 136
 29a:	92 e0       	ldi	r25, 0x02	; 2
 29c:	9f 93       	push	r25
 29e:	8f 93       	push	r24
 2a0:	3c d1       	rcall	.+632    	; 0x51a <printf>
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	07 c0       	rjmp	.+14     	; 0x2b6 <main+0x3e>
			can_msg_send.id = 2;
			can_msg_send.length = 8;
			} else {
			printf("CAN NOT BE WORKING \n\r");
 2a8:	89 e9       	ldi	r24, 0x99	; 153
 2aa:	92 e0       	ldi	r25, 0x02	; 2
 2ac:	9f 93       	push	r25
 2ae:	8f 93       	push	r24
 2b0:	34 d1       	rcall	.+616    	; 0x51a <printf>
 2b2:	0f 90       	pop	r0
 2b4:	0f 90       	pop	r0
		}
		
		ADC_init();
 2b6:	36 df       	rcall	.-404    	; 0x124 <ADC_init>

		sei();
 2b8:	78 94       	sei

	while(1){
			
		ir_val = IR_read();
		printf("ting er av verdi %d\n\r",ir_val);
 2ba:	cf ea       	ldi	r28, 0xAF	; 175
 2bc:	d2 e0       	ldi	r29, 0x02	; 2
		if (ir_val - prev_ir_val != 0){
			if (ir_val == 0){
				printf("Lives have not been reduced\n\r");
			}
			prev_ir_val = ir_val;
			printf("lives have been reduced\n\r");
 2be:	03 ee       	ldi	r16, 0xE3	; 227
 2c0:	12 e0       	ldi	r17, 0x02	; 2
			
		ir_val = IR_read();
		printf("ting er av verdi %d\n\r",ir_val);
		if (ir_val - prev_ir_val != 0){
			if (ir_val == 0){
				printf("Lives have not been reduced\n\r");
 2c2:	0f 2e       	mov	r0, r31
 2c4:	f5 ec       	ldi	r31, 0xC5	; 197
 2c6:	ef 2e       	mov	r14, r31
 2c8:	f2 e0       	ldi	r31, 0x02	; 2
 2ca:	ff 2e       	mov	r15, r31
 2cc:	f0 2d       	mov	r31, r0

		sei();

	while(1){
			
		ir_val = IR_read();
 2ce:	b9 df       	rcall	.-142    	; 0x242 <IR_read>
 2d0:	28 2f       	mov	r18, r24
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	30 93 54 03 	sts	0x0354, r19	; 0x800354 <ir_val+0x1>
 2d8:	20 93 53 03 	sts	0x0353, r18	; 0x800353 <ir_val>
		printf("ting er av verdi %d\n\r",ir_val);
 2dc:	1f 92       	push	r1
 2de:	8f 93       	push	r24
 2e0:	df 93       	push	r29
 2e2:	cf 93       	push	r28
 2e4:	1a d1       	rcall	.+564    	; 0x51a <printf>
		if (ir_val - prev_ir_val != 0){
 2e6:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <ir_val>
 2ea:	90 91 54 03 	lds	r25, 0x0354	; 0x800354 <ir_val+0x1>
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	20 91 51 03 	lds	r18, 0x0351	; 0x800351 <prev_ir_val>
 2fa:	30 91 52 03 	lds	r19, 0x0352	; 0x800352 <prev_ir_val+0x1>
 2fe:	82 17       	cp	r24, r18
 300:	93 07       	cpc	r25, r19
 302:	a1 f0       	breq	.+40     	; 0x32c <main+0xb4>
			if (ir_val == 0){
 304:	89 2b       	or	r24, r25
 306:	29 f4       	brne	.+10     	; 0x312 <main+0x9a>
				printf("Lives have not been reduced\n\r");
 308:	ff 92       	push	r15
 30a:	ef 92       	push	r14
 30c:	06 d1       	rcall	.+524    	; 0x51a <printf>
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
			}
			prev_ir_val = ir_val;
 312:	80 91 53 03 	lds	r24, 0x0353	; 0x800353 <ir_val>
 316:	90 91 54 03 	lds	r25, 0x0354	; 0x800354 <ir_val+0x1>
 31a:	90 93 52 03 	sts	0x0352, r25	; 0x800352 <prev_ir_val+0x1>
 31e:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <prev_ir_val>
			printf("lives have been reduced\n\r");
 322:	1f 93       	push	r17
 324:	0f 93       	push	r16
 326:	f9 d0       	rcall	.+498    	; 0x51a <printf>
 328:	0f 90       	pop	r0
 32a:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 32c:	9f ef       	ldi	r25, 0xFF	; 255
 32e:	29 e6       	ldi	r18, 0x69	; 105
 330:	88 e1       	ldi	r24, 0x18	; 24
 332:	91 50       	subi	r25, 0x01	; 1
 334:	20 40       	sbci	r18, 0x00	; 0
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0xba>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0xc4>
 33c:	00 00       	nop
 33e:	c7 cf       	rjmp	.-114    	; 0x2ce <main+0x56>

00000340 <MCP_reset>:
	SPI_send(MCP_READ_STATUS);
	uint8_t status = SPI_send(0);
	SPI_set_ss(1);
	
	return status;
}
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	71 d0       	rcall	.+226    	; 0x428 <SPI_set_ss>
 346:	80 ec       	ldi	r24, 0xC0	; 192
 348:	69 d0       	rcall	.+210    	; 0x41c <SPI_send>
 34a:	8f e1       	ldi	r24, 0x1F	; 31
 34c:	93 e0       	ldi	r25, 0x03	; 3
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <MCP_reset+0xe>
 352:	00 c0       	rjmp	.+0      	; 0x354 <MCP_reset+0x14>
 354:	00 00       	nop
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	66 c0       	rjmp	.+204    	; 0x428 <SPI_set_ss>
 35c:	08 95       	ret

0000035e <MCP_read>:
 35e:	cf 93       	push	r28
 360:	c8 2f       	mov	r28, r24
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	60 d0       	rcall	.+192    	; 0x428 <SPI_set_ss>
 368:	83 e0       	ldi	r24, 0x03	; 3
 36a:	58 d0       	rcall	.+176    	; 0x41c <SPI_send>
 36c:	8c 2f       	mov	r24, r28
 36e:	56 d0       	rcall	.+172    	; 0x41c <SPI_send>
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	54 d0       	rcall	.+168    	; 0x41c <SPI_send>
 374:	c8 2f       	mov	r28, r24
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	56 d0       	rcall	.+172    	; 0x428 <SPI_set_ss>
 37c:	8c 2f       	mov	r24, r28
 37e:	cf 91       	pop	r28
 380:	08 95       	ret

00000382 <MCP_init>:
 382:	30 d0       	rcall	.+96     	; 0x3e4 <SPI_init>
 384:	dd df       	rcall	.-70     	; 0x340 <MCP_reset>
 386:	8d ef       	ldi	r24, 0xFD	; 253
 388:	92 e0       	ldi	r25, 0x02	; 2
 38a:	9f 93       	push	r25
 38c:	8f 93       	push	r24
 38e:	c5 d0       	rcall	.+394    	; 0x51a <printf>
 390:	8e e0       	ldi	r24, 0x0E	; 14
 392:	e5 df       	rcall	.-54     	; 0x35e <MCP_read>
 394:	80 7e       	andi	r24, 0xE0	; 224
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
 39a:	80 38       	cpi	r24, 0x80	; 128
 39c:	49 f0       	breq	.+18     	; 0x3b0 <MCP_init+0x2e>
 39e:	87 e0       	ldi	r24, 0x07	; 7
 3a0:	93 e0       	ldi	r25, 0x03	; 3
 3a2:	9f 93       	push	r25
 3a4:	8f 93       	push	r24
 3a6:	b9 d0       	rcall	.+370    	; 0x51a <printf>
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	08 95       	ret
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	08 95       	ret

000003b4 <MCP_bit_modify>:

void MCP_bit_modify( uint8_t address, uint8_t mask, uint8_t data )
{
 3b4:	1f 93       	push	r17
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	18 2f       	mov	r17, r24
 3bc:	d6 2f       	mov	r29, r22
 3be:	c4 2f       	mov	r28, r20
	SPI_set_ss(0);
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	31 d0       	rcall	.+98     	; 0x428 <SPI_set_ss>
	SPI_send(MCP_BITMOD);
 3c6:	85 e0       	ldi	r24, 0x05	; 5
 3c8:	29 d0       	rcall	.+82     	; 0x41c <SPI_send>
	
	SPI_send(address);
 3ca:	81 2f       	mov	r24, r17
 3cc:	27 d0       	rcall	.+78     	; 0x41c <SPI_send>
	SPI_send(mask);
 3ce:	8d 2f       	mov	r24, r29
 3d0:	25 d0       	rcall	.+74     	; 0x41c <SPI_send>
	SPI_send(data);
 3d2:	8c 2f       	mov	r24, r28
 3d4:	23 d0       	rcall	.+70     	; 0x41c <SPI_send>
	
	SPI_set_ss(1);
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	26 d0       	rcall	.+76     	; 0x428 <SPI_set_ss>
}
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	1f 91       	pop	r17
 3e2:	08 95       	ret

000003e4 <SPI_init>:
	
	//Wait for data to be received
	while(!(SPSR & (1<<SPIF)));
	
	return SPDR;
}
 3e4:	89 e2       	ldi	r24, 0x29	; 41
 3e6:	93 e0       	ldi	r25, 0x03	; 3
 3e8:	9f 93       	push	r25
 3ea:	8f 93       	push	r24
 3ec:	96 d0       	rcall	.+300    	; 0x51a <printf>
 3ee:	84 b1       	in	r24, 0x04	; 4
 3f0:	87 68       	ori	r24, 0x87	; 135
 3f2:	84 b9       	out	0x04, r24	; 4
 3f4:	23 98       	cbi	0x04, 3	; 4
 3f6:	87 e3       	ldi	r24, 0x37	; 55
 3f8:	93 e0       	ldi	r25, 0x03	; 3
 3fa:	9f 93       	push	r25
 3fc:	8f 93       	push	r24
 3fe:	8d d0       	rcall	.+282    	; 0x51a <printf>
 400:	81 e5       	ldi	r24, 0x51	; 81
 402:	8c bd       	out	0x2c, r24	; 44
 404:	81 e4       	ldi	r24, 0x41	; 65
 406:	93 e0       	ldi	r25, 0x03	; 3
 408:	9f 93       	push	r25
 40a:	8f 93       	push	r24
 40c:	86 d0       	rcall	.+268    	; 0x51a <printf>
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	08 95       	ret

0000041c <SPI_send>:
 41c:	8e bd       	out	0x2e, r24	; 46
 41e:	0d b4       	in	r0, 0x2d	; 45
 420:	07 fe       	sbrs	r0, 7
 422:	fd cf       	rjmp	.-6      	; 0x41e <SPI_send+0x2>
 424:	8e b5       	in	r24, 0x2e	; 46
 426:	08 95       	ret

00000428 <SPI_set_ss>:


void SPI_set_ss( int select )
{
	//for ATmega 162 set chip-select
	if (select == 1){
 428:	81 30       	cpi	r24, 0x01	; 1
 42a:	91 05       	cpc	r25, r1
 42c:	11 f4       	brne	.+4      	; 0x432 <SPI_set_ss+0xa>
		set_bit(PORTB, SPI_SS);
 42e:	2f 9a       	sbi	0x05, 7	; 5
 430:	08 95       	ret
	}
	else if (select == 0){
 432:	89 2b       	or	r24, r25
 434:	09 f4       	brne	.+2      	; 0x438 <SPI_set_ss+0x10>
		clear_bit(PORTB, SPI_SS);
 436:	2f 98       	cbi	0x05, 7	; 5
 438:	08 95       	ret

0000043a <UART_TX>:
}

int UART_TX(char data, FILE * _in){
	(void)(_in);
	
	while( !(UCSR0A & (1 << UDRE0)) );
 43a:	e0 ec       	ldi	r30, 0xC0	; 192
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	90 81       	ld	r25, Z
 440:	95 ff       	sbrs	r25, 5
 442:	fd cf       	rjmp	.-6      	; 0x43e <UART_TX+0x4>
	
	// send data
	UDR0 = data;
 444:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	
	return 0;
}
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	08 95       	ret

0000044e <UART_RX>:

int UART_RX(FILE * _in ){
	(void)(_in);
	while( !(UCSR0A & (1 << RXC0)) );
 44e:	e0 ec       	ldi	r30, 0xC0	; 192
 450:	f0 e0       	ldi	r31, 0x00	; 0
 452:	80 81       	ld	r24, Z
 454:	88 23       	and	r24, r24
 456:	ec f7       	brge	.-6      	; 0x452 <UART_RX+0x4>
	
	// Data recieved
	return UDR0;
 458:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	08 95       	ret

00000460 <UART_Init>:


void UART_Init(unsigned int ubrr)
{
	// Baud rate
	UBRR0H = (unsigned char)(ubrr >> 8);
 460:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char)(ubrr);
 464:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	// Enable Rx and Tx
	
	UCSR0B = (1 << RXEN0 ) | (1 << TXEN0);
 468:	88 e1       	ldi	r24, 0x18	; 24
 46a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	UCSR0C = (1 << USBS0);
 46e:	e2 ec       	ldi	r30, 0xC2	; 194
 470:	f0 e0       	ldi	r31, 0x00	; 0
 472:	88 e0       	ldi	r24, 0x08	; 8
 474:	80 83       	st	Z, r24
	UCSR0C = (3 << UCSZ00);
 476:	86 e0       	ldi	r24, 0x06	; 6
 478:	80 83       	st	Z, r24
	
	

	
	fdevopen(UART_TX, UART_RX);
 47a:	67 e2       	ldi	r22, 0x27	; 39
 47c:	72 e0       	ldi	r23, 0x02	; 2
 47e:	8d e1       	ldi	r24, 0x1D	; 29
 480:	92 e0       	ldi	r25, 0x02	; 2
 482:	01 c0       	rjmp	.+2      	; 0x486 <fdevopen>
 484:	08 95       	ret

00000486 <fdevopen>:
 486:	0f 93       	push	r16
 488:	1f 93       	push	r17
 48a:	cf 93       	push	r28
 48c:	df 93       	push	r29
 48e:	00 97       	sbiw	r24, 0x00	; 0
 490:	31 f4       	brne	.+12     	; 0x49e <fdevopen+0x18>
 492:	61 15       	cp	r22, r1
 494:	71 05       	cpc	r23, r1
 496:	19 f4       	brne	.+6      	; 0x49e <fdevopen+0x18>
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	39 c0       	rjmp	.+114    	; 0x510 <fdevopen+0x8a>
 49e:	8b 01       	movw	r16, r22
 4a0:	ec 01       	movw	r28, r24
 4a2:	6e e0       	ldi	r22, 0x0E	; 14
 4a4:	70 e0       	ldi	r23, 0x00	; 0
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	68 d2       	rcall	.+1232   	; 0x97c <calloc>
 4ac:	fc 01       	movw	r30, r24
 4ae:	89 2b       	or	r24, r25
 4b0:	99 f3       	breq	.-26     	; 0x498 <fdevopen+0x12>
 4b2:	80 e8       	ldi	r24, 0x80	; 128
 4b4:	83 83       	std	Z+3, r24	; 0x03
 4b6:	01 15       	cp	r16, r1
 4b8:	11 05       	cpc	r17, r1
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <fdevopen+0x52>
 4bc:	13 87       	std	Z+11, r17	; 0x0b
 4be:	02 87       	std	Z+10, r16	; 0x0a
 4c0:	81 e8       	ldi	r24, 0x81	; 129
 4c2:	83 83       	std	Z+3, r24	; 0x03
 4c4:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <__iob>
 4c8:	90 91 58 03 	lds	r25, 0x0358	; 0x800358 <__iob+0x1>
 4cc:	89 2b       	or	r24, r25
 4ce:	21 f4       	brne	.+8      	; 0x4d8 <fdevopen+0x52>
 4d0:	f0 93 58 03 	sts	0x0358, r31	; 0x800358 <__iob+0x1>
 4d4:	e0 93 57 03 	sts	0x0357, r30	; 0x800357 <__iob>
 4d8:	20 97       	sbiw	r28, 0x00	; 0
 4da:	c9 f0       	breq	.+50     	; 0x50e <fdevopen+0x88>
 4dc:	d1 87       	std	Z+9, r29	; 0x09
 4de:	c0 87       	std	Z+8, r28	; 0x08
 4e0:	83 81       	ldd	r24, Z+3	; 0x03
 4e2:	82 60       	ori	r24, 0x02	; 2
 4e4:	83 83       	std	Z+3, r24	; 0x03
 4e6:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <__iob+0x2>
 4ea:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <__iob+0x3>
 4ee:	89 2b       	or	r24, r25
 4f0:	71 f4       	brne	.+28     	; 0x50e <fdevopen+0x88>
 4f2:	f0 93 5a 03 	sts	0x035A, r31	; 0x80035a <__iob+0x3>
 4f6:	e0 93 59 03 	sts	0x0359, r30	; 0x800359 <__iob+0x2>
 4fa:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <__iob+0x4>
 4fe:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <__iob+0x5>
 502:	89 2b       	or	r24, r25
 504:	21 f4       	brne	.+8      	; 0x50e <fdevopen+0x88>
 506:	f0 93 5c 03 	sts	0x035C, r31	; 0x80035c <__iob+0x5>
 50a:	e0 93 5b 03 	sts	0x035B, r30	; 0x80035b <__iob+0x4>
 50e:	cf 01       	movw	r24, r30
 510:	df 91       	pop	r29
 512:	cf 91       	pop	r28
 514:	1f 91       	pop	r17
 516:	0f 91       	pop	r16
 518:	08 95       	ret

0000051a <printf>:
 51a:	cf 93       	push	r28
 51c:	df 93       	push	r29
 51e:	cd b7       	in	r28, 0x3d	; 61
 520:	de b7       	in	r29, 0x3e	; 62
 522:	ae 01       	movw	r20, r28
 524:	4a 5f       	subi	r20, 0xFA	; 250
 526:	5f 4f       	sbci	r21, 0xFF	; 255
 528:	fa 01       	movw	r30, r20
 52a:	61 91       	ld	r22, Z+
 52c:	71 91       	ld	r23, Z+
 52e:	af 01       	movw	r20, r30
 530:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <__iob+0x2>
 534:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <__iob+0x3>
 538:	33 d0       	rcall	.+102    	; 0x5a0 <vfprintf>
 53a:	df 91       	pop	r29
 53c:	cf 91       	pop	r28
 53e:	08 95       	ret

00000540 <puts>:
 540:	0f 93       	push	r16
 542:	1f 93       	push	r17
 544:	cf 93       	push	r28
 546:	df 93       	push	r29
 548:	e0 91 59 03 	lds	r30, 0x0359	; 0x800359 <__iob+0x2>
 54c:	f0 91 5a 03 	lds	r31, 0x035A	; 0x80035a <__iob+0x3>
 550:	23 81       	ldd	r18, Z+3	; 0x03
 552:	21 ff       	sbrs	r18, 1
 554:	1b c0       	rjmp	.+54     	; 0x58c <puts+0x4c>
 556:	8c 01       	movw	r16, r24
 558:	d0 e0       	ldi	r29, 0x00	; 0
 55a:	c0 e0       	ldi	r28, 0x00	; 0
 55c:	f8 01       	movw	r30, r16
 55e:	81 91       	ld	r24, Z+
 560:	8f 01       	movw	r16, r30
 562:	60 91 59 03 	lds	r22, 0x0359	; 0x800359 <__iob+0x2>
 566:	70 91 5a 03 	lds	r23, 0x035A	; 0x80035a <__iob+0x3>
 56a:	db 01       	movw	r26, r22
 56c:	18 96       	adiw	r26, 0x08	; 8
 56e:	ed 91       	ld	r30, X+
 570:	fc 91       	ld	r31, X
 572:	19 97       	sbiw	r26, 0x09	; 9
 574:	88 23       	and	r24, r24
 576:	31 f0       	breq	.+12     	; 0x584 <puts+0x44>
 578:	19 95       	eicall
 57a:	89 2b       	or	r24, r25
 57c:	79 f3       	breq	.-34     	; 0x55c <puts+0x1c>
 57e:	df ef       	ldi	r29, 0xFF	; 255
 580:	cf ef       	ldi	r28, 0xFF	; 255
 582:	ec cf       	rjmp	.-40     	; 0x55c <puts+0x1c>
 584:	8a e0       	ldi	r24, 0x0A	; 10
 586:	19 95       	eicall
 588:	89 2b       	or	r24, r25
 58a:	19 f0       	breq	.+6      	; 0x592 <puts+0x52>
 58c:	8f ef       	ldi	r24, 0xFF	; 255
 58e:	9f ef       	ldi	r25, 0xFF	; 255
 590:	02 c0       	rjmp	.+4      	; 0x596 <puts+0x56>
 592:	8d 2f       	mov	r24, r29
 594:	9c 2f       	mov	r25, r28
 596:	df 91       	pop	r29
 598:	cf 91       	pop	r28
 59a:	1f 91       	pop	r17
 59c:	0f 91       	pop	r16
 59e:	08 95       	ret

000005a0 <vfprintf>:
 5a0:	2f 92       	push	r2
 5a2:	3f 92       	push	r3
 5a4:	4f 92       	push	r4
 5a6:	5f 92       	push	r5
 5a8:	6f 92       	push	r6
 5aa:	7f 92       	push	r7
 5ac:	8f 92       	push	r8
 5ae:	9f 92       	push	r9
 5b0:	af 92       	push	r10
 5b2:	bf 92       	push	r11
 5b4:	cf 92       	push	r12
 5b6:	df 92       	push	r13
 5b8:	ef 92       	push	r14
 5ba:	ff 92       	push	r15
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	cd b7       	in	r28, 0x3d	; 61
 5c6:	de b7       	in	r29, 0x3e	; 62
 5c8:	2c 97       	sbiw	r28, 0x0c	; 12
 5ca:	0f b6       	in	r0, 0x3f	; 63
 5cc:	f8 94       	cli
 5ce:	de bf       	out	0x3e, r29	; 62
 5d0:	0f be       	out	0x3f, r0	; 63
 5d2:	cd bf       	out	0x3d, r28	; 61
 5d4:	7c 01       	movw	r14, r24
 5d6:	6b 01       	movw	r12, r22
 5d8:	8a 01       	movw	r16, r20
 5da:	fc 01       	movw	r30, r24
 5dc:	17 82       	std	Z+7, r1	; 0x07
 5de:	16 82       	std	Z+6, r1	; 0x06
 5e0:	83 81       	ldd	r24, Z+3	; 0x03
 5e2:	81 ff       	sbrs	r24, 1
 5e4:	b0 c1       	rjmp	.+864    	; 0x946 <vfprintf+0x3a6>
 5e6:	ce 01       	movw	r24, r28
 5e8:	01 96       	adiw	r24, 0x01	; 1
 5ea:	4c 01       	movw	r8, r24
 5ec:	f7 01       	movw	r30, r14
 5ee:	93 81       	ldd	r25, Z+3	; 0x03
 5f0:	f6 01       	movw	r30, r12
 5f2:	93 fd       	sbrc	r25, 3
 5f4:	85 91       	lpm	r24, Z+
 5f6:	93 ff       	sbrs	r25, 3
 5f8:	81 91       	ld	r24, Z+
 5fa:	6f 01       	movw	r12, r30
 5fc:	88 23       	and	r24, r24
 5fe:	09 f4       	brne	.+2      	; 0x602 <vfprintf+0x62>
 600:	9e c1       	rjmp	.+828    	; 0x93e <vfprintf+0x39e>
 602:	85 32       	cpi	r24, 0x25	; 37
 604:	39 f4       	brne	.+14     	; 0x614 <vfprintf+0x74>
 606:	93 fd       	sbrc	r25, 3
 608:	85 91       	lpm	r24, Z+
 60a:	93 ff       	sbrs	r25, 3
 60c:	81 91       	ld	r24, Z+
 60e:	6f 01       	movw	r12, r30
 610:	85 32       	cpi	r24, 0x25	; 37
 612:	21 f4       	brne	.+8      	; 0x61c <vfprintf+0x7c>
 614:	b7 01       	movw	r22, r14
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	15 d3       	rcall	.+1578   	; 0xc44 <fputc>
 61a:	e8 cf       	rjmp	.-48     	; 0x5ec <vfprintf+0x4c>
 61c:	51 2c       	mov	r5, r1
 61e:	31 2c       	mov	r3, r1
 620:	20 e0       	ldi	r18, 0x00	; 0
 622:	20 32       	cpi	r18, 0x20	; 32
 624:	a0 f4       	brcc	.+40     	; 0x64e <vfprintf+0xae>
 626:	8b 32       	cpi	r24, 0x2B	; 43
 628:	69 f0       	breq	.+26     	; 0x644 <vfprintf+0xa4>
 62a:	30 f4       	brcc	.+12     	; 0x638 <vfprintf+0x98>
 62c:	80 32       	cpi	r24, 0x20	; 32
 62e:	59 f0       	breq	.+22     	; 0x646 <vfprintf+0xa6>
 630:	83 32       	cpi	r24, 0x23	; 35
 632:	69 f4       	brne	.+26     	; 0x64e <vfprintf+0xae>
 634:	20 61       	ori	r18, 0x10	; 16
 636:	2c c0       	rjmp	.+88     	; 0x690 <vfprintf+0xf0>
 638:	8d 32       	cpi	r24, 0x2D	; 45
 63a:	39 f0       	breq	.+14     	; 0x64a <vfprintf+0xaa>
 63c:	80 33       	cpi	r24, 0x30	; 48
 63e:	39 f4       	brne	.+14     	; 0x64e <vfprintf+0xae>
 640:	21 60       	ori	r18, 0x01	; 1
 642:	26 c0       	rjmp	.+76     	; 0x690 <vfprintf+0xf0>
 644:	22 60       	ori	r18, 0x02	; 2
 646:	24 60       	ori	r18, 0x04	; 4
 648:	23 c0       	rjmp	.+70     	; 0x690 <vfprintf+0xf0>
 64a:	28 60       	ori	r18, 0x08	; 8
 64c:	21 c0       	rjmp	.+66     	; 0x690 <vfprintf+0xf0>
 64e:	27 fd       	sbrc	r18, 7
 650:	27 c0       	rjmp	.+78     	; 0x6a0 <vfprintf+0x100>
 652:	30 ed       	ldi	r19, 0xD0	; 208
 654:	38 0f       	add	r19, r24
 656:	3a 30       	cpi	r19, 0x0A	; 10
 658:	78 f4       	brcc	.+30     	; 0x678 <vfprintf+0xd8>
 65a:	26 ff       	sbrs	r18, 6
 65c:	06 c0       	rjmp	.+12     	; 0x66a <vfprintf+0xca>
 65e:	fa e0       	ldi	r31, 0x0A	; 10
 660:	5f 9e       	mul	r5, r31
 662:	30 0d       	add	r19, r0
 664:	11 24       	eor	r1, r1
 666:	53 2e       	mov	r5, r19
 668:	13 c0       	rjmp	.+38     	; 0x690 <vfprintf+0xf0>
 66a:	8a e0       	ldi	r24, 0x0A	; 10
 66c:	38 9e       	mul	r3, r24
 66e:	30 0d       	add	r19, r0
 670:	11 24       	eor	r1, r1
 672:	33 2e       	mov	r3, r19
 674:	20 62       	ori	r18, 0x20	; 32
 676:	0c c0       	rjmp	.+24     	; 0x690 <vfprintf+0xf0>
 678:	8e 32       	cpi	r24, 0x2E	; 46
 67a:	21 f4       	brne	.+8      	; 0x684 <vfprintf+0xe4>
 67c:	26 fd       	sbrc	r18, 6
 67e:	5f c1       	rjmp	.+702    	; 0x93e <vfprintf+0x39e>
 680:	20 64       	ori	r18, 0x40	; 64
 682:	06 c0       	rjmp	.+12     	; 0x690 <vfprintf+0xf0>
 684:	8c 36       	cpi	r24, 0x6C	; 108
 686:	11 f4       	brne	.+4      	; 0x68c <vfprintf+0xec>
 688:	20 68       	ori	r18, 0x80	; 128
 68a:	02 c0       	rjmp	.+4      	; 0x690 <vfprintf+0xf0>
 68c:	88 36       	cpi	r24, 0x68	; 104
 68e:	41 f4       	brne	.+16     	; 0x6a0 <vfprintf+0x100>
 690:	f6 01       	movw	r30, r12
 692:	93 fd       	sbrc	r25, 3
 694:	85 91       	lpm	r24, Z+
 696:	93 ff       	sbrs	r25, 3
 698:	81 91       	ld	r24, Z+
 69a:	6f 01       	movw	r12, r30
 69c:	81 11       	cpse	r24, r1
 69e:	c1 cf       	rjmp	.-126    	; 0x622 <vfprintf+0x82>
 6a0:	98 2f       	mov	r25, r24
 6a2:	9f 7d       	andi	r25, 0xDF	; 223
 6a4:	95 54       	subi	r25, 0x45	; 69
 6a6:	93 30       	cpi	r25, 0x03	; 3
 6a8:	28 f4       	brcc	.+10     	; 0x6b4 <vfprintf+0x114>
 6aa:	0c 5f       	subi	r16, 0xFC	; 252
 6ac:	1f 4f       	sbci	r17, 0xFF	; 255
 6ae:	ff e3       	ldi	r31, 0x3F	; 63
 6b0:	f9 83       	std	Y+1, r31	; 0x01
 6b2:	0d c0       	rjmp	.+26     	; 0x6ce <vfprintf+0x12e>
 6b4:	83 36       	cpi	r24, 0x63	; 99
 6b6:	31 f0       	breq	.+12     	; 0x6c4 <vfprintf+0x124>
 6b8:	83 37       	cpi	r24, 0x73	; 115
 6ba:	71 f0       	breq	.+28     	; 0x6d8 <vfprintf+0x138>
 6bc:	83 35       	cpi	r24, 0x53	; 83
 6be:	09 f0       	breq	.+2      	; 0x6c2 <vfprintf+0x122>
 6c0:	57 c0       	rjmp	.+174    	; 0x770 <vfprintf+0x1d0>
 6c2:	21 c0       	rjmp	.+66     	; 0x706 <vfprintf+0x166>
 6c4:	f8 01       	movw	r30, r16
 6c6:	80 81       	ld	r24, Z
 6c8:	89 83       	std	Y+1, r24	; 0x01
 6ca:	0e 5f       	subi	r16, 0xFE	; 254
 6cc:	1f 4f       	sbci	r17, 0xFF	; 255
 6ce:	44 24       	eor	r4, r4
 6d0:	43 94       	inc	r4
 6d2:	51 2c       	mov	r5, r1
 6d4:	54 01       	movw	r10, r8
 6d6:	14 c0       	rjmp	.+40     	; 0x700 <vfprintf+0x160>
 6d8:	38 01       	movw	r6, r16
 6da:	f2 e0       	ldi	r31, 0x02	; 2
 6dc:	6f 0e       	add	r6, r31
 6de:	71 1c       	adc	r7, r1
 6e0:	f8 01       	movw	r30, r16
 6e2:	a0 80       	ld	r10, Z
 6e4:	b1 80       	ldd	r11, Z+1	; 0x01
 6e6:	26 ff       	sbrs	r18, 6
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <vfprintf+0x150>
 6ea:	65 2d       	mov	r22, r5
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <vfprintf+0x154>
 6f0:	6f ef       	ldi	r22, 0xFF	; 255
 6f2:	7f ef       	ldi	r23, 0xFF	; 255
 6f4:	c5 01       	movw	r24, r10
 6f6:	2c 87       	std	Y+12, r18	; 0x0c
 6f8:	9a d2       	rcall	.+1332   	; 0xc2e <strnlen>
 6fa:	2c 01       	movw	r4, r24
 6fc:	83 01       	movw	r16, r6
 6fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 700:	2f 77       	andi	r18, 0x7F	; 127
 702:	22 2e       	mov	r2, r18
 704:	16 c0       	rjmp	.+44     	; 0x732 <vfprintf+0x192>
 706:	38 01       	movw	r6, r16
 708:	f2 e0       	ldi	r31, 0x02	; 2
 70a:	6f 0e       	add	r6, r31
 70c:	71 1c       	adc	r7, r1
 70e:	f8 01       	movw	r30, r16
 710:	a0 80       	ld	r10, Z
 712:	b1 80       	ldd	r11, Z+1	; 0x01
 714:	26 ff       	sbrs	r18, 6
 716:	03 c0       	rjmp	.+6      	; 0x71e <vfprintf+0x17e>
 718:	65 2d       	mov	r22, r5
 71a:	70 e0       	ldi	r23, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <vfprintf+0x182>
 71e:	6f ef       	ldi	r22, 0xFF	; 255
 720:	7f ef       	ldi	r23, 0xFF	; 255
 722:	c5 01       	movw	r24, r10
 724:	2c 87       	std	Y+12, r18	; 0x0c
 726:	71 d2       	rcall	.+1250   	; 0xc0a <strnlen_P>
 728:	2c 01       	movw	r4, r24
 72a:	2c 85       	ldd	r18, Y+12	; 0x0c
 72c:	20 68       	ori	r18, 0x80	; 128
 72e:	22 2e       	mov	r2, r18
 730:	83 01       	movw	r16, r6
 732:	23 fc       	sbrc	r2, 3
 734:	19 c0       	rjmp	.+50     	; 0x768 <vfprintf+0x1c8>
 736:	83 2d       	mov	r24, r3
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	48 16       	cp	r4, r24
 73c:	59 06       	cpc	r5, r25
 73e:	a0 f4       	brcc	.+40     	; 0x768 <vfprintf+0x1c8>
 740:	b7 01       	movw	r22, r14
 742:	80 e2       	ldi	r24, 0x20	; 32
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	7e d2       	rcall	.+1276   	; 0xc44 <fputc>
 748:	3a 94       	dec	r3
 74a:	f5 cf       	rjmp	.-22     	; 0x736 <vfprintf+0x196>
 74c:	f5 01       	movw	r30, r10
 74e:	27 fc       	sbrc	r2, 7
 750:	85 91       	lpm	r24, Z+
 752:	27 fe       	sbrs	r2, 7
 754:	81 91       	ld	r24, Z+
 756:	5f 01       	movw	r10, r30
 758:	b7 01       	movw	r22, r14
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	73 d2       	rcall	.+1254   	; 0xc44 <fputc>
 75e:	31 10       	cpse	r3, r1
 760:	3a 94       	dec	r3
 762:	f1 e0       	ldi	r31, 0x01	; 1
 764:	4f 1a       	sub	r4, r31
 766:	51 08       	sbc	r5, r1
 768:	41 14       	cp	r4, r1
 76a:	51 04       	cpc	r5, r1
 76c:	79 f7       	brne	.-34     	; 0x74c <vfprintf+0x1ac>
 76e:	de c0       	rjmp	.+444    	; 0x92c <vfprintf+0x38c>
 770:	84 36       	cpi	r24, 0x64	; 100
 772:	11 f0       	breq	.+4      	; 0x778 <vfprintf+0x1d8>
 774:	89 36       	cpi	r24, 0x69	; 105
 776:	31 f5       	brne	.+76     	; 0x7c4 <vfprintf+0x224>
 778:	f8 01       	movw	r30, r16
 77a:	27 ff       	sbrs	r18, 7
 77c:	07 c0       	rjmp	.+14     	; 0x78c <vfprintf+0x1ec>
 77e:	60 81       	ld	r22, Z
 780:	71 81       	ldd	r23, Z+1	; 0x01
 782:	82 81       	ldd	r24, Z+2	; 0x02
 784:	93 81       	ldd	r25, Z+3	; 0x03
 786:	0c 5f       	subi	r16, 0xFC	; 252
 788:	1f 4f       	sbci	r17, 0xFF	; 255
 78a:	08 c0       	rjmp	.+16     	; 0x79c <vfprintf+0x1fc>
 78c:	60 81       	ld	r22, Z
 78e:	71 81       	ldd	r23, Z+1	; 0x01
 790:	07 2e       	mov	r0, r23
 792:	00 0c       	add	r0, r0
 794:	88 0b       	sbc	r24, r24
 796:	99 0b       	sbc	r25, r25
 798:	0e 5f       	subi	r16, 0xFE	; 254
 79a:	1f 4f       	sbci	r17, 0xFF	; 255
 79c:	2f 76       	andi	r18, 0x6F	; 111
 79e:	72 2e       	mov	r7, r18
 7a0:	97 ff       	sbrs	r25, 7
 7a2:	09 c0       	rjmp	.+18     	; 0x7b6 <vfprintf+0x216>
 7a4:	90 95       	com	r25
 7a6:	80 95       	com	r24
 7a8:	70 95       	com	r23
 7aa:	61 95       	neg	r22
 7ac:	7f 4f       	sbci	r23, 0xFF	; 255
 7ae:	8f 4f       	sbci	r24, 0xFF	; 255
 7b0:	9f 4f       	sbci	r25, 0xFF	; 255
 7b2:	20 68       	ori	r18, 0x80	; 128
 7b4:	72 2e       	mov	r7, r18
 7b6:	2a e0       	ldi	r18, 0x0A	; 10
 7b8:	30 e0       	ldi	r19, 0x00	; 0
 7ba:	a4 01       	movw	r20, r8
 7bc:	7b d2       	rcall	.+1270   	; 0xcb4 <__ultoa_invert>
 7be:	a8 2e       	mov	r10, r24
 7c0:	a8 18       	sub	r10, r8
 7c2:	43 c0       	rjmp	.+134    	; 0x84a <vfprintf+0x2aa>
 7c4:	85 37       	cpi	r24, 0x75	; 117
 7c6:	29 f4       	brne	.+10     	; 0x7d2 <vfprintf+0x232>
 7c8:	2f 7e       	andi	r18, 0xEF	; 239
 7ca:	b2 2e       	mov	r11, r18
 7cc:	2a e0       	ldi	r18, 0x0A	; 10
 7ce:	30 e0       	ldi	r19, 0x00	; 0
 7d0:	25 c0       	rjmp	.+74     	; 0x81c <vfprintf+0x27c>
 7d2:	f2 2f       	mov	r31, r18
 7d4:	f9 7f       	andi	r31, 0xF9	; 249
 7d6:	bf 2e       	mov	r11, r31
 7d8:	8f 36       	cpi	r24, 0x6F	; 111
 7da:	c1 f0       	breq	.+48     	; 0x80c <vfprintf+0x26c>
 7dc:	18 f4       	brcc	.+6      	; 0x7e4 <vfprintf+0x244>
 7de:	88 35       	cpi	r24, 0x58	; 88
 7e0:	79 f0       	breq	.+30     	; 0x800 <vfprintf+0x260>
 7e2:	ad c0       	rjmp	.+346    	; 0x93e <vfprintf+0x39e>
 7e4:	80 37       	cpi	r24, 0x70	; 112
 7e6:	19 f0       	breq	.+6      	; 0x7ee <vfprintf+0x24e>
 7e8:	88 37       	cpi	r24, 0x78	; 120
 7ea:	21 f0       	breq	.+8      	; 0x7f4 <vfprintf+0x254>
 7ec:	a8 c0       	rjmp	.+336    	; 0x93e <vfprintf+0x39e>
 7ee:	2f 2f       	mov	r18, r31
 7f0:	20 61       	ori	r18, 0x10	; 16
 7f2:	b2 2e       	mov	r11, r18
 7f4:	b4 fe       	sbrs	r11, 4
 7f6:	0d c0       	rjmp	.+26     	; 0x812 <vfprintf+0x272>
 7f8:	8b 2d       	mov	r24, r11
 7fa:	84 60       	ori	r24, 0x04	; 4
 7fc:	b8 2e       	mov	r11, r24
 7fe:	09 c0       	rjmp	.+18     	; 0x812 <vfprintf+0x272>
 800:	24 ff       	sbrs	r18, 4
 802:	0a c0       	rjmp	.+20     	; 0x818 <vfprintf+0x278>
 804:	9f 2f       	mov	r25, r31
 806:	96 60       	ori	r25, 0x06	; 6
 808:	b9 2e       	mov	r11, r25
 80a:	06 c0       	rjmp	.+12     	; 0x818 <vfprintf+0x278>
 80c:	28 e0       	ldi	r18, 0x08	; 8
 80e:	30 e0       	ldi	r19, 0x00	; 0
 810:	05 c0       	rjmp	.+10     	; 0x81c <vfprintf+0x27c>
 812:	20 e1       	ldi	r18, 0x10	; 16
 814:	30 e0       	ldi	r19, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <vfprintf+0x27c>
 818:	20 e1       	ldi	r18, 0x10	; 16
 81a:	32 e0       	ldi	r19, 0x02	; 2
 81c:	f8 01       	movw	r30, r16
 81e:	b7 fe       	sbrs	r11, 7
 820:	07 c0       	rjmp	.+14     	; 0x830 <vfprintf+0x290>
 822:	60 81       	ld	r22, Z
 824:	71 81       	ldd	r23, Z+1	; 0x01
 826:	82 81       	ldd	r24, Z+2	; 0x02
 828:	93 81       	ldd	r25, Z+3	; 0x03
 82a:	0c 5f       	subi	r16, 0xFC	; 252
 82c:	1f 4f       	sbci	r17, 0xFF	; 255
 82e:	06 c0       	rjmp	.+12     	; 0x83c <vfprintf+0x29c>
 830:	60 81       	ld	r22, Z
 832:	71 81       	ldd	r23, Z+1	; 0x01
 834:	80 e0       	ldi	r24, 0x00	; 0
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	0e 5f       	subi	r16, 0xFE	; 254
 83a:	1f 4f       	sbci	r17, 0xFF	; 255
 83c:	a4 01       	movw	r20, r8
 83e:	3a d2       	rcall	.+1140   	; 0xcb4 <__ultoa_invert>
 840:	a8 2e       	mov	r10, r24
 842:	a8 18       	sub	r10, r8
 844:	fb 2d       	mov	r31, r11
 846:	ff 77       	andi	r31, 0x7F	; 127
 848:	7f 2e       	mov	r7, r31
 84a:	76 fe       	sbrs	r7, 6
 84c:	0b c0       	rjmp	.+22     	; 0x864 <vfprintf+0x2c4>
 84e:	37 2d       	mov	r19, r7
 850:	3e 7f       	andi	r19, 0xFE	; 254
 852:	a5 14       	cp	r10, r5
 854:	50 f4       	brcc	.+20     	; 0x86a <vfprintf+0x2ca>
 856:	74 fe       	sbrs	r7, 4
 858:	0a c0       	rjmp	.+20     	; 0x86e <vfprintf+0x2ce>
 85a:	72 fc       	sbrc	r7, 2
 85c:	08 c0       	rjmp	.+16     	; 0x86e <vfprintf+0x2ce>
 85e:	37 2d       	mov	r19, r7
 860:	3e 7e       	andi	r19, 0xEE	; 238
 862:	05 c0       	rjmp	.+10     	; 0x86e <vfprintf+0x2ce>
 864:	ba 2c       	mov	r11, r10
 866:	37 2d       	mov	r19, r7
 868:	03 c0       	rjmp	.+6      	; 0x870 <vfprintf+0x2d0>
 86a:	ba 2c       	mov	r11, r10
 86c:	01 c0       	rjmp	.+2      	; 0x870 <vfprintf+0x2d0>
 86e:	b5 2c       	mov	r11, r5
 870:	34 ff       	sbrs	r19, 4
 872:	0d c0       	rjmp	.+26     	; 0x88e <vfprintf+0x2ee>
 874:	fe 01       	movw	r30, r28
 876:	ea 0d       	add	r30, r10
 878:	f1 1d       	adc	r31, r1
 87a:	80 81       	ld	r24, Z
 87c:	80 33       	cpi	r24, 0x30	; 48
 87e:	11 f4       	brne	.+4      	; 0x884 <vfprintf+0x2e4>
 880:	39 7e       	andi	r19, 0xE9	; 233
 882:	09 c0       	rjmp	.+18     	; 0x896 <vfprintf+0x2f6>
 884:	32 ff       	sbrs	r19, 2
 886:	06 c0       	rjmp	.+12     	; 0x894 <vfprintf+0x2f4>
 888:	b3 94       	inc	r11
 88a:	b3 94       	inc	r11
 88c:	04 c0       	rjmp	.+8      	; 0x896 <vfprintf+0x2f6>
 88e:	83 2f       	mov	r24, r19
 890:	86 78       	andi	r24, 0x86	; 134
 892:	09 f0       	breq	.+2      	; 0x896 <vfprintf+0x2f6>
 894:	b3 94       	inc	r11
 896:	33 fd       	sbrc	r19, 3
 898:	12 c0       	rjmp	.+36     	; 0x8be <vfprintf+0x31e>
 89a:	30 ff       	sbrs	r19, 0
 89c:	06 c0       	rjmp	.+12     	; 0x8aa <vfprintf+0x30a>
 89e:	5a 2c       	mov	r5, r10
 8a0:	b3 14       	cp	r11, r3
 8a2:	18 f4       	brcc	.+6      	; 0x8aa <vfprintf+0x30a>
 8a4:	53 0c       	add	r5, r3
 8a6:	5b 18       	sub	r5, r11
 8a8:	b3 2c       	mov	r11, r3
 8aa:	b3 14       	cp	r11, r3
 8ac:	60 f4       	brcc	.+24     	; 0x8c6 <vfprintf+0x326>
 8ae:	b7 01       	movw	r22, r14
 8b0:	80 e2       	ldi	r24, 0x20	; 32
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	3c 87       	std	Y+12, r19	; 0x0c
 8b6:	c6 d1       	rcall	.+908    	; 0xc44 <fputc>
 8b8:	b3 94       	inc	r11
 8ba:	3c 85       	ldd	r19, Y+12	; 0x0c
 8bc:	f6 cf       	rjmp	.-20     	; 0x8aa <vfprintf+0x30a>
 8be:	b3 14       	cp	r11, r3
 8c0:	10 f4       	brcc	.+4      	; 0x8c6 <vfprintf+0x326>
 8c2:	3b 18       	sub	r3, r11
 8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <vfprintf+0x328>
 8c6:	31 2c       	mov	r3, r1
 8c8:	34 ff       	sbrs	r19, 4
 8ca:	11 c0       	rjmp	.+34     	; 0x8ee <vfprintf+0x34e>
 8cc:	b7 01       	movw	r22, r14
 8ce:	80 e3       	ldi	r24, 0x30	; 48
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	3c 87       	std	Y+12, r19	; 0x0c
 8d4:	b7 d1       	rcall	.+878    	; 0xc44 <fputc>
 8d6:	3c 85       	ldd	r19, Y+12	; 0x0c
 8d8:	32 ff       	sbrs	r19, 2
 8da:	16 c0       	rjmp	.+44     	; 0x908 <vfprintf+0x368>
 8dc:	31 fd       	sbrc	r19, 1
 8de:	03 c0       	rjmp	.+6      	; 0x8e6 <vfprintf+0x346>
 8e0:	88 e7       	ldi	r24, 0x78	; 120
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <vfprintf+0x34a>
 8e6:	88 e5       	ldi	r24, 0x58	; 88
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	b7 01       	movw	r22, r14
 8ec:	0c c0       	rjmp	.+24     	; 0x906 <vfprintf+0x366>
 8ee:	83 2f       	mov	r24, r19
 8f0:	86 78       	andi	r24, 0x86	; 134
 8f2:	51 f0       	breq	.+20     	; 0x908 <vfprintf+0x368>
 8f4:	31 ff       	sbrs	r19, 1
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <vfprintf+0x35c>
 8f8:	8b e2       	ldi	r24, 0x2B	; 43
 8fa:	01 c0       	rjmp	.+2      	; 0x8fe <vfprintf+0x35e>
 8fc:	80 e2       	ldi	r24, 0x20	; 32
 8fe:	37 fd       	sbrc	r19, 7
 900:	8d e2       	ldi	r24, 0x2D	; 45
 902:	b7 01       	movw	r22, r14
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	9e d1       	rcall	.+828    	; 0xc44 <fputc>
 908:	a5 14       	cp	r10, r5
 90a:	30 f4       	brcc	.+12     	; 0x918 <vfprintf+0x378>
 90c:	b7 01       	movw	r22, r14
 90e:	80 e3       	ldi	r24, 0x30	; 48
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	98 d1       	rcall	.+816    	; 0xc44 <fputc>
 914:	5a 94       	dec	r5
 916:	f8 cf       	rjmp	.-16     	; 0x908 <vfprintf+0x368>
 918:	aa 94       	dec	r10
 91a:	f4 01       	movw	r30, r8
 91c:	ea 0d       	add	r30, r10
 91e:	f1 1d       	adc	r31, r1
 920:	80 81       	ld	r24, Z
 922:	b7 01       	movw	r22, r14
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	8e d1       	rcall	.+796    	; 0xc44 <fputc>
 928:	a1 10       	cpse	r10, r1
 92a:	f6 cf       	rjmp	.-20     	; 0x918 <vfprintf+0x378>
 92c:	33 20       	and	r3, r3
 92e:	09 f4       	brne	.+2      	; 0x932 <vfprintf+0x392>
 930:	5d ce       	rjmp	.-838    	; 0x5ec <vfprintf+0x4c>
 932:	b7 01       	movw	r22, r14
 934:	80 e2       	ldi	r24, 0x20	; 32
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	85 d1       	rcall	.+778    	; 0xc44 <fputc>
 93a:	3a 94       	dec	r3
 93c:	f7 cf       	rjmp	.-18     	; 0x92c <vfprintf+0x38c>
 93e:	f7 01       	movw	r30, r14
 940:	86 81       	ldd	r24, Z+6	; 0x06
 942:	97 81       	ldd	r25, Z+7	; 0x07
 944:	02 c0       	rjmp	.+4      	; 0x94a <vfprintf+0x3aa>
 946:	8f ef       	ldi	r24, 0xFF	; 255
 948:	9f ef       	ldi	r25, 0xFF	; 255
 94a:	2c 96       	adiw	r28, 0x0c	; 12
 94c:	0f b6       	in	r0, 0x3f	; 63
 94e:	f8 94       	cli
 950:	de bf       	out	0x3e, r29	; 62
 952:	0f be       	out	0x3f, r0	; 63
 954:	cd bf       	out	0x3d, r28	; 61
 956:	df 91       	pop	r29
 958:	cf 91       	pop	r28
 95a:	1f 91       	pop	r17
 95c:	0f 91       	pop	r16
 95e:	ff 90       	pop	r15
 960:	ef 90       	pop	r14
 962:	df 90       	pop	r13
 964:	cf 90       	pop	r12
 966:	bf 90       	pop	r11
 968:	af 90       	pop	r10
 96a:	9f 90       	pop	r9
 96c:	8f 90       	pop	r8
 96e:	7f 90       	pop	r7
 970:	6f 90       	pop	r6
 972:	5f 90       	pop	r5
 974:	4f 90       	pop	r4
 976:	3f 90       	pop	r3
 978:	2f 90       	pop	r2
 97a:	08 95       	ret

0000097c <calloc>:
 97c:	0f 93       	push	r16
 97e:	1f 93       	push	r17
 980:	cf 93       	push	r28
 982:	df 93       	push	r29
 984:	86 9f       	mul	r24, r22
 986:	80 01       	movw	r16, r0
 988:	87 9f       	mul	r24, r23
 98a:	10 0d       	add	r17, r0
 98c:	96 9f       	mul	r25, r22
 98e:	10 0d       	add	r17, r0
 990:	11 24       	eor	r1, r1
 992:	c8 01       	movw	r24, r16
 994:	0d d0       	rcall	.+26     	; 0x9b0 <malloc>
 996:	ec 01       	movw	r28, r24
 998:	00 97       	sbiw	r24, 0x00	; 0
 99a:	21 f0       	breq	.+8      	; 0x9a4 <calloc+0x28>
 99c:	a8 01       	movw	r20, r16
 99e:	60 e0       	ldi	r22, 0x00	; 0
 9a0:	70 e0       	ldi	r23, 0x00	; 0
 9a2:	3e d1       	rcall	.+636    	; 0xc20 <memset>
 9a4:	ce 01       	movw	r24, r28
 9a6:	df 91       	pop	r29
 9a8:	cf 91       	pop	r28
 9aa:	1f 91       	pop	r17
 9ac:	0f 91       	pop	r16
 9ae:	08 95       	ret

000009b0 <malloc>:
 9b0:	cf 93       	push	r28
 9b2:	df 93       	push	r29
 9b4:	82 30       	cpi	r24, 0x02	; 2
 9b6:	91 05       	cpc	r25, r1
 9b8:	10 f4       	brcc	.+4      	; 0x9be <malloc+0xe>
 9ba:	82 e0       	ldi	r24, 0x02	; 2
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	e0 91 5f 03 	lds	r30, 0x035F	; 0x80035f <__flp>
 9c2:	f0 91 60 03 	lds	r31, 0x0360	; 0x800360 <__flp+0x1>
 9c6:	20 e0       	ldi	r18, 0x00	; 0
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	c0 e0       	ldi	r28, 0x00	; 0
 9cc:	d0 e0       	ldi	r29, 0x00	; 0
 9ce:	30 97       	sbiw	r30, 0x00	; 0
 9d0:	11 f1       	breq	.+68     	; 0xa16 <malloc+0x66>
 9d2:	40 81       	ld	r20, Z
 9d4:	51 81       	ldd	r21, Z+1	; 0x01
 9d6:	48 17       	cp	r20, r24
 9d8:	59 07       	cpc	r21, r25
 9da:	c0 f0       	brcs	.+48     	; 0xa0c <malloc+0x5c>
 9dc:	48 17       	cp	r20, r24
 9de:	59 07       	cpc	r21, r25
 9e0:	61 f4       	brne	.+24     	; 0x9fa <malloc+0x4a>
 9e2:	82 81       	ldd	r24, Z+2	; 0x02
 9e4:	93 81       	ldd	r25, Z+3	; 0x03
 9e6:	20 97       	sbiw	r28, 0x00	; 0
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <malloc+0x40>
 9ea:	9b 83       	std	Y+3, r25	; 0x03
 9ec:	8a 83       	std	Y+2, r24	; 0x02
 9ee:	2b c0       	rjmp	.+86     	; 0xa46 <malloc+0x96>
 9f0:	90 93 60 03 	sts	0x0360, r25	; 0x800360 <__flp+0x1>
 9f4:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <__flp>
 9f8:	26 c0       	rjmp	.+76     	; 0xa46 <malloc+0x96>
 9fa:	21 15       	cp	r18, r1
 9fc:	31 05       	cpc	r19, r1
 9fe:	19 f0       	breq	.+6      	; 0xa06 <malloc+0x56>
 a00:	42 17       	cp	r20, r18
 a02:	53 07       	cpc	r21, r19
 a04:	18 f4       	brcc	.+6      	; 0xa0c <malloc+0x5c>
 a06:	9a 01       	movw	r18, r20
 a08:	be 01       	movw	r22, r28
 a0a:	df 01       	movw	r26, r30
 a0c:	ef 01       	movw	r28, r30
 a0e:	02 80       	ldd	r0, Z+2	; 0x02
 a10:	f3 81       	ldd	r31, Z+3	; 0x03
 a12:	e0 2d       	mov	r30, r0
 a14:	dc cf       	rjmp	.-72     	; 0x9ce <malloc+0x1e>
 a16:	21 15       	cp	r18, r1
 a18:	31 05       	cpc	r19, r1
 a1a:	09 f1       	breq	.+66     	; 0xa5e <malloc+0xae>
 a1c:	28 1b       	sub	r18, r24
 a1e:	39 0b       	sbc	r19, r25
 a20:	24 30       	cpi	r18, 0x04	; 4
 a22:	31 05       	cpc	r19, r1
 a24:	90 f4       	brcc	.+36     	; 0xa4a <malloc+0x9a>
 a26:	12 96       	adiw	r26, 0x02	; 2
 a28:	8d 91       	ld	r24, X+
 a2a:	9c 91       	ld	r25, X
 a2c:	13 97       	sbiw	r26, 0x03	; 3
 a2e:	61 15       	cp	r22, r1
 a30:	71 05       	cpc	r23, r1
 a32:	21 f0       	breq	.+8      	; 0xa3c <malloc+0x8c>
 a34:	fb 01       	movw	r30, r22
 a36:	93 83       	std	Z+3, r25	; 0x03
 a38:	82 83       	std	Z+2, r24	; 0x02
 a3a:	04 c0       	rjmp	.+8      	; 0xa44 <malloc+0x94>
 a3c:	90 93 60 03 	sts	0x0360, r25	; 0x800360 <__flp+0x1>
 a40:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <__flp>
 a44:	fd 01       	movw	r30, r26
 a46:	32 96       	adiw	r30, 0x02	; 2
 a48:	44 c0       	rjmp	.+136    	; 0xad2 <malloc+0x122>
 a4a:	fd 01       	movw	r30, r26
 a4c:	e2 0f       	add	r30, r18
 a4e:	f3 1f       	adc	r31, r19
 a50:	81 93       	st	Z+, r24
 a52:	91 93       	st	Z+, r25
 a54:	22 50       	subi	r18, 0x02	; 2
 a56:	31 09       	sbc	r19, r1
 a58:	2d 93       	st	X+, r18
 a5a:	3c 93       	st	X, r19
 a5c:	3a c0       	rjmp	.+116    	; 0xad2 <malloc+0x122>
 a5e:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <__brkval>
 a62:	30 91 5e 03 	lds	r19, 0x035E	; 0x80035e <__brkval+0x1>
 a66:	23 2b       	or	r18, r19
 a68:	41 f4       	brne	.+16     	; 0xa7a <malloc+0xca>
 a6a:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 a6e:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 a72:	30 93 5e 03 	sts	0x035E, r19	; 0x80035e <__brkval+0x1>
 a76:	20 93 5d 03 	sts	0x035D, r18	; 0x80035d <__brkval>
 a7a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 a7e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 a82:	21 15       	cp	r18, r1
 a84:	31 05       	cpc	r19, r1
 a86:	41 f4       	brne	.+16     	; 0xa98 <malloc+0xe8>
 a88:	2d b7       	in	r18, 0x3d	; 61
 a8a:	3e b7       	in	r19, 0x3e	; 62
 a8c:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 a90:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 a94:	24 1b       	sub	r18, r20
 a96:	35 0b       	sbc	r19, r21
 a98:	e0 91 5d 03 	lds	r30, 0x035D	; 0x80035d <__brkval>
 a9c:	f0 91 5e 03 	lds	r31, 0x035E	; 0x80035e <__brkval+0x1>
 aa0:	e2 17       	cp	r30, r18
 aa2:	f3 07       	cpc	r31, r19
 aa4:	a0 f4       	brcc	.+40     	; 0xace <malloc+0x11e>
 aa6:	2e 1b       	sub	r18, r30
 aa8:	3f 0b       	sbc	r19, r31
 aaa:	28 17       	cp	r18, r24
 aac:	39 07       	cpc	r19, r25
 aae:	78 f0       	brcs	.+30     	; 0xace <malloc+0x11e>
 ab0:	ac 01       	movw	r20, r24
 ab2:	4e 5f       	subi	r20, 0xFE	; 254
 ab4:	5f 4f       	sbci	r21, 0xFF	; 255
 ab6:	24 17       	cp	r18, r20
 ab8:	35 07       	cpc	r19, r21
 aba:	48 f0       	brcs	.+18     	; 0xace <malloc+0x11e>
 abc:	4e 0f       	add	r20, r30
 abe:	5f 1f       	adc	r21, r31
 ac0:	50 93 5e 03 	sts	0x035E, r21	; 0x80035e <__brkval+0x1>
 ac4:	40 93 5d 03 	sts	0x035D, r20	; 0x80035d <__brkval>
 ac8:	81 93       	st	Z+, r24
 aca:	91 93       	st	Z+, r25
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <malloc+0x122>
 ace:	e0 e0       	ldi	r30, 0x00	; 0
 ad0:	f0 e0       	ldi	r31, 0x00	; 0
 ad2:	cf 01       	movw	r24, r30
 ad4:	df 91       	pop	r29
 ad6:	cf 91       	pop	r28
 ad8:	08 95       	ret

00000ada <free>:
 ada:	0f 93       	push	r16
 adc:	1f 93       	push	r17
 ade:	cf 93       	push	r28
 ae0:	df 93       	push	r29
 ae2:	00 97       	sbiw	r24, 0x00	; 0
 ae4:	09 f4       	brne	.+2      	; 0xae8 <free+0xe>
 ae6:	8c c0       	rjmp	.+280    	; 0xc00 <free+0x126>
 ae8:	fc 01       	movw	r30, r24
 aea:	32 97       	sbiw	r30, 0x02	; 2
 aec:	13 82       	std	Z+3, r1	; 0x03
 aee:	12 82       	std	Z+2, r1	; 0x02
 af0:	00 91 5f 03 	lds	r16, 0x035F	; 0x80035f <__flp>
 af4:	10 91 60 03 	lds	r17, 0x0360	; 0x800360 <__flp+0x1>
 af8:	01 15       	cp	r16, r1
 afa:	11 05       	cpc	r17, r1
 afc:	81 f4       	brne	.+32     	; 0xb1e <free+0x44>
 afe:	20 81       	ld	r18, Z
 b00:	31 81       	ldd	r19, Z+1	; 0x01
 b02:	82 0f       	add	r24, r18
 b04:	93 1f       	adc	r25, r19
 b06:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <__brkval>
 b0a:	30 91 5e 03 	lds	r19, 0x035E	; 0x80035e <__brkval+0x1>
 b0e:	28 17       	cp	r18, r24
 b10:	39 07       	cpc	r19, r25
 b12:	79 f5       	brne	.+94     	; 0xb72 <free+0x98>
 b14:	f0 93 5e 03 	sts	0x035E, r31	; 0x80035e <__brkval+0x1>
 b18:	e0 93 5d 03 	sts	0x035D, r30	; 0x80035d <__brkval>
 b1c:	71 c0       	rjmp	.+226    	; 0xc00 <free+0x126>
 b1e:	d8 01       	movw	r26, r16
 b20:	40 e0       	ldi	r20, 0x00	; 0
 b22:	50 e0       	ldi	r21, 0x00	; 0
 b24:	ae 17       	cp	r26, r30
 b26:	bf 07       	cpc	r27, r31
 b28:	50 f4       	brcc	.+20     	; 0xb3e <free+0x64>
 b2a:	12 96       	adiw	r26, 0x02	; 2
 b2c:	2d 91       	ld	r18, X+
 b2e:	3c 91       	ld	r19, X
 b30:	13 97       	sbiw	r26, 0x03	; 3
 b32:	ad 01       	movw	r20, r26
 b34:	21 15       	cp	r18, r1
 b36:	31 05       	cpc	r19, r1
 b38:	09 f1       	breq	.+66     	; 0xb7c <free+0xa2>
 b3a:	d9 01       	movw	r26, r18
 b3c:	f3 cf       	rjmp	.-26     	; 0xb24 <free+0x4a>
 b3e:	9d 01       	movw	r18, r26
 b40:	da 01       	movw	r26, r20
 b42:	33 83       	std	Z+3, r19	; 0x03
 b44:	22 83       	std	Z+2, r18	; 0x02
 b46:	60 81       	ld	r22, Z
 b48:	71 81       	ldd	r23, Z+1	; 0x01
 b4a:	86 0f       	add	r24, r22
 b4c:	97 1f       	adc	r25, r23
 b4e:	82 17       	cp	r24, r18
 b50:	93 07       	cpc	r25, r19
 b52:	69 f4       	brne	.+26     	; 0xb6e <free+0x94>
 b54:	ec 01       	movw	r28, r24
 b56:	28 81       	ld	r18, Y
 b58:	39 81       	ldd	r19, Y+1	; 0x01
 b5a:	26 0f       	add	r18, r22
 b5c:	37 1f       	adc	r19, r23
 b5e:	2e 5f       	subi	r18, 0xFE	; 254
 b60:	3f 4f       	sbci	r19, 0xFF	; 255
 b62:	31 83       	std	Z+1, r19	; 0x01
 b64:	20 83       	st	Z, r18
 b66:	8a 81       	ldd	r24, Y+2	; 0x02
 b68:	9b 81       	ldd	r25, Y+3	; 0x03
 b6a:	93 83       	std	Z+3, r25	; 0x03
 b6c:	82 83       	std	Z+2, r24	; 0x02
 b6e:	45 2b       	or	r20, r21
 b70:	29 f4       	brne	.+10     	; 0xb7c <free+0xa2>
 b72:	f0 93 60 03 	sts	0x0360, r31	; 0x800360 <__flp+0x1>
 b76:	e0 93 5f 03 	sts	0x035F, r30	; 0x80035f <__flp>
 b7a:	42 c0       	rjmp	.+132    	; 0xc00 <free+0x126>
 b7c:	13 96       	adiw	r26, 0x03	; 3
 b7e:	fc 93       	st	X, r31
 b80:	ee 93       	st	-X, r30
 b82:	12 97       	sbiw	r26, 0x02	; 2
 b84:	ed 01       	movw	r28, r26
 b86:	49 91       	ld	r20, Y+
 b88:	59 91       	ld	r21, Y+
 b8a:	9e 01       	movw	r18, r28
 b8c:	24 0f       	add	r18, r20
 b8e:	35 1f       	adc	r19, r21
 b90:	e2 17       	cp	r30, r18
 b92:	f3 07       	cpc	r31, r19
 b94:	71 f4       	brne	.+28     	; 0xbb2 <free+0xd8>
 b96:	80 81       	ld	r24, Z
 b98:	91 81       	ldd	r25, Z+1	; 0x01
 b9a:	84 0f       	add	r24, r20
 b9c:	95 1f       	adc	r25, r21
 b9e:	02 96       	adiw	r24, 0x02	; 2
 ba0:	11 96       	adiw	r26, 0x01	; 1
 ba2:	9c 93       	st	X, r25
 ba4:	8e 93       	st	-X, r24
 ba6:	82 81       	ldd	r24, Z+2	; 0x02
 ba8:	93 81       	ldd	r25, Z+3	; 0x03
 baa:	13 96       	adiw	r26, 0x03	; 3
 bac:	9c 93       	st	X, r25
 bae:	8e 93       	st	-X, r24
 bb0:	12 97       	sbiw	r26, 0x02	; 2
 bb2:	e0 e0       	ldi	r30, 0x00	; 0
 bb4:	f0 e0       	ldi	r31, 0x00	; 0
 bb6:	d8 01       	movw	r26, r16
 bb8:	12 96       	adiw	r26, 0x02	; 2
 bba:	8d 91       	ld	r24, X+
 bbc:	9c 91       	ld	r25, X
 bbe:	13 97       	sbiw	r26, 0x03	; 3
 bc0:	00 97       	sbiw	r24, 0x00	; 0
 bc2:	19 f0       	breq	.+6      	; 0xbca <free+0xf0>
 bc4:	f8 01       	movw	r30, r16
 bc6:	8c 01       	movw	r16, r24
 bc8:	f6 cf       	rjmp	.-20     	; 0xbb6 <free+0xdc>
 bca:	8d 91       	ld	r24, X+
 bcc:	9c 91       	ld	r25, X
 bce:	98 01       	movw	r18, r16
 bd0:	2e 5f       	subi	r18, 0xFE	; 254
 bd2:	3f 4f       	sbci	r19, 0xFF	; 255
 bd4:	82 0f       	add	r24, r18
 bd6:	93 1f       	adc	r25, r19
 bd8:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <__brkval>
 bdc:	30 91 5e 03 	lds	r19, 0x035E	; 0x80035e <__brkval+0x1>
 be0:	28 17       	cp	r18, r24
 be2:	39 07       	cpc	r19, r25
 be4:	69 f4       	brne	.+26     	; 0xc00 <free+0x126>
 be6:	30 97       	sbiw	r30, 0x00	; 0
 be8:	29 f4       	brne	.+10     	; 0xbf4 <free+0x11a>
 bea:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <__flp+0x1>
 bee:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <__flp>
 bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <free+0x11e>
 bf4:	13 82       	std	Z+3, r1	; 0x03
 bf6:	12 82       	std	Z+2, r1	; 0x02
 bf8:	10 93 5e 03 	sts	0x035E, r17	; 0x80035e <__brkval+0x1>
 bfc:	00 93 5d 03 	sts	0x035D, r16	; 0x80035d <__brkval>
 c00:	df 91       	pop	r29
 c02:	cf 91       	pop	r28
 c04:	1f 91       	pop	r17
 c06:	0f 91       	pop	r16
 c08:	08 95       	ret

00000c0a <strnlen_P>:
 c0a:	fc 01       	movw	r30, r24
 c0c:	05 90       	lpm	r0, Z+
 c0e:	61 50       	subi	r22, 0x01	; 1
 c10:	70 40       	sbci	r23, 0x00	; 0
 c12:	01 10       	cpse	r0, r1
 c14:	d8 f7       	brcc	.-10     	; 0xc0c <strnlen_P+0x2>
 c16:	80 95       	com	r24
 c18:	90 95       	com	r25
 c1a:	8e 0f       	add	r24, r30
 c1c:	9f 1f       	adc	r25, r31
 c1e:	08 95       	ret

00000c20 <memset>:
 c20:	dc 01       	movw	r26, r24
 c22:	01 c0       	rjmp	.+2      	; 0xc26 <memset+0x6>
 c24:	6d 93       	st	X+, r22
 c26:	41 50       	subi	r20, 0x01	; 1
 c28:	50 40       	sbci	r21, 0x00	; 0
 c2a:	e0 f7       	brcc	.-8      	; 0xc24 <memset+0x4>
 c2c:	08 95       	ret

00000c2e <strnlen>:
 c2e:	fc 01       	movw	r30, r24
 c30:	61 50       	subi	r22, 0x01	; 1
 c32:	70 40       	sbci	r23, 0x00	; 0
 c34:	01 90       	ld	r0, Z+
 c36:	01 10       	cpse	r0, r1
 c38:	d8 f7       	brcc	.-10     	; 0xc30 <strnlen+0x2>
 c3a:	80 95       	com	r24
 c3c:	90 95       	com	r25
 c3e:	8e 0f       	add	r24, r30
 c40:	9f 1f       	adc	r25, r31
 c42:	08 95       	ret

00000c44 <fputc>:
 c44:	0f 93       	push	r16
 c46:	1f 93       	push	r17
 c48:	cf 93       	push	r28
 c4a:	df 93       	push	r29
 c4c:	fb 01       	movw	r30, r22
 c4e:	23 81       	ldd	r18, Z+3	; 0x03
 c50:	21 fd       	sbrc	r18, 1
 c52:	03 c0       	rjmp	.+6      	; 0xc5a <fputc+0x16>
 c54:	8f ef       	ldi	r24, 0xFF	; 255
 c56:	9f ef       	ldi	r25, 0xFF	; 255
 c58:	28 c0       	rjmp	.+80     	; 0xcaa <fputc+0x66>
 c5a:	22 ff       	sbrs	r18, 2
 c5c:	16 c0       	rjmp	.+44     	; 0xc8a <fputc+0x46>
 c5e:	46 81       	ldd	r20, Z+6	; 0x06
 c60:	57 81       	ldd	r21, Z+7	; 0x07
 c62:	24 81       	ldd	r18, Z+4	; 0x04
 c64:	35 81       	ldd	r19, Z+5	; 0x05
 c66:	42 17       	cp	r20, r18
 c68:	53 07       	cpc	r21, r19
 c6a:	44 f4       	brge	.+16     	; 0xc7c <fputc+0x38>
 c6c:	a0 81       	ld	r26, Z
 c6e:	b1 81       	ldd	r27, Z+1	; 0x01
 c70:	9d 01       	movw	r18, r26
 c72:	2f 5f       	subi	r18, 0xFF	; 255
 c74:	3f 4f       	sbci	r19, 0xFF	; 255
 c76:	31 83       	std	Z+1, r19	; 0x01
 c78:	20 83       	st	Z, r18
 c7a:	8c 93       	st	X, r24
 c7c:	26 81       	ldd	r18, Z+6	; 0x06
 c7e:	37 81       	ldd	r19, Z+7	; 0x07
 c80:	2f 5f       	subi	r18, 0xFF	; 255
 c82:	3f 4f       	sbci	r19, 0xFF	; 255
 c84:	37 83       	std	Z+7, r19	; 0x07
 c86:	26 83       	std	Z+6, r18	; 0x06
 c88:	10 c0       	rjmp	.+32     	; 0xcaa <fputc+0x66>
 c8a:	eb 01       	movw	r28, r22
 c8c:	09 2f       	mov	r16, r25
 c8e:	18 2f       	mov	r17, r24
 c90:	00 84       	ldd	r0, Z+8	; 0x08
 c92:	f1 85       	ldd	r31, Z+9	; 0x09
 c94:	e0 2d       	mov	r30, r0
 c96:	19 95       	eicall
 c98:	89 2b       	or	r24, r25
 c9a:	e1 f6       	brne	.-72     	; 0xc54 <fputc+0x10>
 c9c:	8e 81       	ldd	r24, Y+6	; 0x06
 c9e:	9f 81       	ldd	r25, Y+7	; 0x07
 ca0:	01 96       	adiw	r24, 0x01	; 1
 ca2:	9f 83       	std	Y+7, r25	; 0x07
 ca4:	8e 83       	std	Y+6, r24	; 0x06
 ca6:	81 2f       	mov	r24, r17
 ca8:	90 2f       	mov	r25, r16
 caa:	df 91       	pop	r29
 cac:	cf 91       	pop	r28
 cae:	1f 91       	pop	r17
 cb0:	0f 91       	pop	r16
 cb2:	08 95       	ret

00000cb4 <__ultoa_invert>:
 cb4:	fa 01       	movw	r30, r20
 cb6:	aa 27       	eor	r26, r26
 cb8:	28 30       	cpi	r18, 0x08	; 8
 cba:	51 f1       	breq	.+84     	; 0xd10 <__ultoa_invert+0x5c>
 cbc:	20 31       	cpi	r18, 0x10	; 16
 cbe:	81 f1       	breq	.+96     	; 0xd20 <__ultoa_invert+0x6c>
 cc0:	e8 94       	clt
 cc2:	6f 93       	push	r22
 cc4:	6e 7f       	andi	r22, 0xFE	; 254
 cc6:	6e 5f       	subi	r22, 0xFE	; 254
 cc8:	7f 4f       	sbci	r23, 0xFF	; 255
 cca:	8f 4f       	sbci	r24, 0xFF	; 255
 ccc:	9f 4f       	sbci	r25, 0xFF	; 255
 cce:	af 4f       	sbci	r26, 0xFF	; 255
 cd0:	b1 e0       	ldi	r27, 0x01	; 1
 cd2:	3e d0       	rcall	.+124    	; 0xd50 <__ultoa_invert+0x9c>
 cd4:	b4 e0       	ldi	r27, 0x04	; 4
 cd6:	3c d0       	rcall	.+120    	; 0xd50 <__ultoa_invert+0x9c>
 cd8:	67 0f       	add	r22, r23
 cda:	78 1f       	adc	r23, r24
 cdc:	89 1f       	adc	r24, r25
 cde:	9a 1f       	adc	r25, r26
 ce0:	a1 1d       	adc	r26, r1
 ce2:	68 0f       	add	r22, r24
 ce4:	79 1f       	adc	r23, r25
 ce6:	8a 1f       	adc	r24, r26
 ce8:	91 1d       	adc	r25, r1
 cea:	a1 1d       	adc	r26, r1
 cec:	6a 0f       	add	r22, r26
 cee:	71 1d       	adc	r23, r1
 cf0:	81 1d       	adc	r24, r1
 cf2:	91 1d       	adc	r25, r1
 cf4:	a1 1d       	adc	r26, r1
 cf6:	20 d0       	rcall	.+64     	; 0xd38 <__ultoa_invert+0x84>
 cf8:	09 f4       	brne	.+2      	; 0xcfc <__ultoa_invert+0x48>
 cfa:	68 94       	set
 cfc:	3f 91       	pop	r19
 cfe:	2a e0       	ldi	r18, 0x0A	; 10
 d00:	26 9f       	mul	r18, r22
 d02:	11 24       	eor	r1, r1
 d04:	30 19       	sub	r19, r0
 d06:	30 5d       	subi	r19, 0xD0	; 208
 d08:	31 93       	st	Z+, r19
 d0a:	de f6       	brtc	.-74     	; 0xcc2 <__ultoa_invert+0xe>
 d0c:	cf 01       	movw	r24, r30
 d0e:	08 95       	ret
 d10:	46 2f       	mov	r20, r22
 d12:	47 70       	andi	r20, 0x07	; 7
 d14:	40 5d       	subi	r20, 0xD0	; 208
 d16:	41 93       	st	Z+, r20
 d18:	b3 e0       	ldi	r27, 0x03	; 3
 d1a:	0f d0       	rcall	.+30     	; 0xd3a <__ultoa_invert+0x86>
 d1c:	c9 f7       	brne	.-14     	; 0xd10 <__ultoa_invert+0x5c>
 d1e:	f6 cf       	rjmp	.-20     	; 0xd0c <__ultoa_invert+0x58>
 d20:	46 2f       	mov	r20, r22
 d22:	4f 70       	andi	r20, 0x0F	; 15
 d24:	40 5d       	subi	r20, 0xD0	; 208
 d26:	4a 33       	cpi	r20, 0x3A	; 58
 d28:	18 f0       	brcs	.+6      	; 0xd30 <__ultoa_invert+0x7c>
 d2a:	49 5d       	subi	r20, 0xD9	; 217
 d2c:	31 fd       	sbrc	r19, 1
 d2e:	40 52       	subi	r20, 0x20	; 32
 d30:	41 93       	st	Z+, r20
 d32:	02 d0       	rcall	.+4      	; 0xd38 <__ultoa_invert+0x84>
 d34:	a9 f7       	brne	.-22     	; 0xd20 <__ultoa_invert+0x6c>
 d36:	ea cf       	rjmp	.-44     	; 0xd0c <__ultoa_invert+0x58>
 d38:	b4 e0       	ldi	r27, 0x04	; 4
 d3a:	a6 95       	lsr	r26
 d3c:	97 95       	ror	r25
 d3e:	87 95       	ror	r24
 d40:	77 95       	ror	r23
 d42:	67 95       	ror	r22
 d44:	ba 95       	dec	r27
 d46:	c9 f7       	brne	.-14     	; 0xd3a <__ultoa_invert+0x86>
 d48:	00 97       	sbiw	r24, 0x00	; 0
 d4a:	61 05       	cpc	r22, r1
 d4c:	71 05       	cpc	r23, r1
 d4e:	08 95       	ret
 d50:	9b 01       	movw	r18, r22
 d52:	ac 01       	movw	r20, r24
 d54:	0a 2e       	mov	r0, r26
 d56:	06 94       	lsr	r0
 d58:	57 95       	ror	r21
 d5a:	47 95       	ror	r20
 d5c:	37 95       	ror	r19
 d5e:	27 95       	ror	r18
 d60:	ba 95       	dec	r27
 d62:	c9 f7       	brne	.-14     	; 0xd56 <__ultoa_invert+0xa2>
 d64:	62 0f       	add	r22, r18
 d66:	73 1f       	adc	r23, r19
 d68:	84 1f       	adc	r24, r20
 d6a:	95 1f       	adc	r25, r21
 d6c:	a0 1d       	adc	r26, r0
 d6e:	08 95       	ret

00000d70 <_exit>:
 d70:	f8 94       	cli

00000d72 <__stop_program>:
 d72:	ff cf       	rjmp	.-2      	; 0xd72 <__stop_program>
